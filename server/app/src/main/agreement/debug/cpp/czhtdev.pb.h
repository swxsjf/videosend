// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: czhtdev.proto

#ifndef PROTOBUF_czhtdev_2eproto__INCLUDED
#define PROTOBUF_czhtdev_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Czhtdev {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_czhtdev_2eproto();
void protobuf_InitDefaults_czhtdev_2eproto();
void protobuf_AssignDesc_czhtdev_2eproto();
void protobuf_ShutdownFile_czhtdev_2eproto();

class AddPicture;
class ConfigDescribe;
class ConfigPartDescribe;
class DelPicture;
class DeleteLocalUser;
class DevConfig;
class DeviceInfo;
class Face_Param;
class IDCard;
class IP;
class IPTable;
class Message;
class ModifyConfig;
class PassageRecord;
class PassageRecordList;
class QueryConfig;
class QueryLocalUser;
class QueryLocalUserList;
class QueryPassageRecord;
class QueryPassageRecordList;
class Request;
class Response;
class TimeAuth;
class TimePeriod;
class UpdatePicture;
class User;
class UserList;
class UserPic;
class Week;

enum MessageType {
  MsgDefaultReply = 1,
  MsgGetDevice = 36865,
  MsgGetDeviceReply = 36866,
  MsgSetDevice = 36867,
  MsgSetDeviceReply = 36868,
  MsgGetDeviceConfig = 36869,
  MsgGetDeviceConfigReply = 36870,
  MsgSetDeviceConfig = 36871,
  MsgSetDeviceConfigReply = 36872,
  MsgGetUser = 36873,
  MsgGetUserReply = 36874,
  MsgGetUserList = 36875,
  MsgGetUserReplyList = 36876,
  MsgAddUser = 36877,
  MsgAddUserReply = 36878,
  MsgDelUser = 36879,
  MsgDelUserReply = 36880,
  MsgModifyUser = 36881,
  MsgModifyUserReply = 36882,
  MsgGetLocalRecord = 36883,
  MsgGetLocalRecordReply = 36884,
  MsgGetLocalRecordList = 36885,
  MsgGetLocalRecordReplyList = 36886,
  MsgGetLocalRecordSynchronous = 36887,
  MsgGetLocalRecordSynchronousReply = 36888,
  MsgAddPicture = 36889,
  MsgAddPictureReply = 36896,
  MsgDelPicture = 36897,
  MsgDelPictureReply = 36898,
  MsgModifyPicture = 36899,
  MsgModifyPictureReply = 36900,
  MsgAddIDCard = 36901,
  MsgAddIDCardReply = 36902,
  MsgDelIDCard = 36903,
  MsgDelIDCardReply = 36904,
  MsgGetIDCard = 36907,
  MsgGetIDCardReply = 36908,
  MsgAddIPList = 36912,
  MsgAddIPListeeply = 36913,
  MsgDelIPList = 36914,
  MsgDelIPListReply = 36915,
  MsgGetIPList = 36916,
  MsgGetIPListReply = 36917,
  MsgOpenDoor = 36918,
  MsgOpenDoorReply = 36919,
  MsgCloseDoor = 36920,
  MsgCloseDoorReply = 36921,
  MsgRestartDevices = 36922,
  MsgRestartDevicesReply = 36923
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MsgDefaultReply;
const MessageType MessageType_MAX = MsgRestartDevicesReply;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
enum ErrorType {
  ErrorNoError = 0,
  ErrorSameID = 38144,
  ErrorNoface = 38145,
  ErrorPic = 38146,
  ErrorTooManyFace = 38147,
  ErrorNoID = 38148,
  ErrorState = 38149,
  ErrorinsertUserTable = 38150,
  ErrorinsertUser = 38151,
  Errorupdate = 38152
};
bool ErrorType_IsValid(int value);
const ErrorType ErrorType_MIN = ErrorNoError;
const ErrorType ErrorType_MAX = Errorupdate;
const int ErrorType_ARRAYSIZE = ErrorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorType_descriptor();
inline const ::std::string& ErrorType_Name(ErrorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorType_descriptor(), value);
}
inline bool ErrorType_Parse(
    const ::std::string& name, ErrorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorType>(
    ErrorType_descriptor(), name, value);
}
// ===================================================================

class DeviceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.DeviceInfo) */ {
 public:
  DeviceInfo();
  virtual ~DeviceInfo();

  DeviceInfo(const DeviceInfo& from);

  inline DeviceInfo& operator=(const DeviceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceInfo& default_instance();

  static const DeviceInfo* internal_default_instance();

  void Swap(DeviceInfo* other);

  // implements Message ----------------------------------------------

  inline DeviceInfo* New() const { return New(NULL); }

  DeviceInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceInfo& from);
  void MergeFrom(const DeviceInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeviceInfo* other);
  void UnsafeMergeFrom(const DeviceInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string device_id = 1;
  bool has_device_id() const;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 1;
  const ::std::string& device_id() const;
  void set_device_id(const ::std::string& value);
  void set_device_id(const char* value);
  void set_device_id(const char* value, size_t size);
  ::std::string* mutable_device_id();
  ::std::string* release_device_id();
  void set_allocated_device_id(::std::string* device_id);

  // optional string device_name = 2;
  bool has_device_name() const;
  void clear_device_name();
  static const int kDeviceNameFieldNumber = 2;
  const ::std::string& device_name() const;
  void set_device_name(const ::std::string& value);
  void set_device_name(const char* value);
  void set_device_name(const char* value, size_t size);
  ::std::string* mutable_device_name();
  ::std::string* release_device_name();
  void set_allocated_device_name(::std::string* device_name);

  // optional int32 device_type = 3;
  bool has_device_type() const;
  void clear_device_type();
  static const int kDeviceTypeFieldNumber = 3;
  ::google::protobuf::int32 device_type() const;
  void set_device_type(::google::protobuf::int32 value);

  // optional string device_version = 4;
  bool has_device_version() const;
  void clear_device_version();
  static const int kDeviceVersionFieldNumber = 4;
  const ::std::string& device_version() const;
  void set_device_version(const ::std::string& value);
  void set_device_version(const char* value);
  void set_device_version(const char* value, size_t size);
  ::std::string* mutable_device_version();
  ::std::string* release_device_version();
  void set_allocated_device_version(::std::string* device_version);

  // optional string device_android_id = 5;
  bool has_device_android_id() const;
  void clear_device_android_id();
  static const int kDeviceAndroidIdFieldNumber = 5;
  const ::std::string& device_android_id() const;
  void set_device_android_id(const ::std::string& value);
  void set_device_android_id(const char* value);
  void set_device_android_id(const char* value, size_t size);
  ::std::string* mutable_device_android_id();
  ::std::string* release_device_android_id();
  void set_allocated_device_android_id(::std::string* device_android_id);

  // @@protoc_insertion_point(class_scope:Czhtdev.DeviceInfo)
 private:
  inline void set_has_device_id();
  inline void clear_has_device_id();
  inline void set_has_device_name();
  inline void clear_has_device_name();
  inline void set_has_device_type();
  inline void clear_has_device_type();
  inline void set_has_device_version();
  inline void clear_has_device_version();
  inline void set_has_device_android_id();
  inline void clear_has_device_android_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr device_id_;
  ::google::protobuf::internal::ArenaStringPtr device_name_;
  ::google::protobuf::internal::ArenaStringPtr device_version_;
  ::google::protobuf::internal::ArenaStringPtr device_android_id_;
  ::google::protobuf::int32 device_type_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeviceInfo> DeviceInfo_default_instance_;

// -------------------------------------------------------------------

class DevConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.DevConfig) */ {
 public:
  DevConfig();
  virtual ~DevConfig();

  DevConfig(const DevConfig& from);

  inline DevConfig& operator=(const DevConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DevConfig& default_instance();

  static const DevConfig* internal_default_instance();

  void Swap(DevConfig* other);

  // implements Message ----------------------------------------------

  inline DevConfig* New() const { return New(NULL); }

  DevConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DevConfig& from);
  void MergeFrom(const DevConfig& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DevConfig* other);
  void UnsafeMergeFrom(const DevConfig& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Czhtdev.ConfigDescribe config = 1;
  int config_size() const;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  const ::Czhtdev::ConfigDescribe& config(int index) const;
  ::Czhtdev::ConfigDescribe* mutable_config(int index);
  ::Czhtdev::ConfigDescribe* add_config();
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::ConfigDescribe >*
      mutable_config();
  const ::google::protobuf::RepeatedPtrField< ::Czhtdev::ConfigDescribe >&
      config() const;

  // @@protoc_insertion_point(class_scope:Czhtdev.DevConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::ConfigDescribe > config_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DevConfig> DevConfig_default_instance_;

// -------------------------------------------------------------------

class QueryConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.QueryConfig) */ {
 public:
  QueryConfig();
  virtual ~QueryConfig();

  QueryConfig(const QueryConfig& from);

  inline QueryConfig& operator=(const QueryConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryConfig& default_instance();

  static const QueryConfig* internal_default_instance();

  void Swap(QueryConfig* other);

  // implements Message ----------------------------------------------

  inline QueryConfig* New() const { return New(NULL); }

  QueryConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryConfig& from);
  void MergeFrom(const QueryConfig& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryConfig* other);
  void UnsafeMergeFrom(const QueryConfig& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string save = 1;
  bool has_save() const;
  void clear_save();
  static const int kSaveFieldNumber = 1;
  const ::std::string& save() const;
  void set_save(const ::std::string& value);
  void set_save(const char* value);
  void set_save(const char* value, size_t size);
  ::std::string* mutable_save();
  ::std::string* release_save();
  void set_allocated_save(::std::string* save);

  // @@protoc_insertion_point(class_scope:Czhtdev.QueryConfig)
 private:
  inline void set_has_save();
  inline void clear_has_save();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr save_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryConfig> QueryConfig_default_instance_;

// -------------------------------------------------------------------

class ModifyConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.ModifyConfig) */ {
 public:
  ModifyConfig();
  virtual ~ModifyConfig();

  ModifyConfig(const ModifyConfig& from);

  inline ModifyConfig& operator=(const ModifyConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyConfig& default_instance();

  static const ModifyConfig* internal_default_instance();

  void Swap(ModifyConfig* other);

  // implements Message ----------------------------------------------

  inline ModifyConfig* New() const { return New(NULL); }

  ModifyConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyConfig& from);
  void MergeFrom(const ModifyConfig& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModifyConfig* other);
  void UnsafeMergeFrom(const ModifyConfig& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string save = 1;
  bool has_save() const;
  void clear_save();
  static const int kSaveFieldNumber = 1;
  const ::std::string& save() const;
  void set_save(const ::std::string& value);
  void set_save(const char* value);
  void set_save(const char* value, size_t size);
  ::std::string* mutable_save();
  ::std::string* release_save();
  void set_allocated_save(::std::string* save);

  // repeated .Czhtdev.ConfigPartDescribe config = 2;
  int config_size() const;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  const ::Czhtdev::ConfigPartDescribe& config(int index) const;
  ::Czhtdev::ConfigPartDescribe* mutable_config(int index);
  ::Czhtdev::ConfigPartDescribe* add_config();
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::ConfigPartDescribe >*
      mutable_config();
  const ::google::protobuf::RepeatedPtrField< ::Czhtdev::ConfigPartDescribe >&
      config() const;

  // @@protoc_insertion_point(class_scope:Czhtdev.ModifyConfig)
 private:
  inline void set_has_save();
  inline void clear_has_save();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::ConfigPartDescribe > config_;
  ::google::protobuf::internal::ArenaStringPtr save_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ModifyConfig> ModifyConfig_default_instance_;

// -------------------------------------------------------------------

class ConfigDescribe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.ConfigDescribe) */ {
 public:
  ConfigDescribe();
  virtual ~ConfigDescribe();

  ConfigDescribe(const ConfigDescribe& from);

  inline ConfigDescribe& operator=(const ConfigDescribe& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigDescribe& default_instance();

  static const ConfigDescribe* internal_default_instance();

  void Swap(ConfigDescribe* other);

  // implements Message ----------------------------------------------

  inline ConfigDescribe* New() const { return New(NULL); }

  ConfigDescribe* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigDescribe& from);
  void MergeFrom(const ConfigDescribe& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigDescribe* other);
  void UnsafeMergeFrom(const ConfigDescribe& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string emnu = 1;
  bool has_emnu() const;
  void clear_emnu();
  static const int kEmnuFieldNumber = 1;
  const ::std::string& emnu() const;
  void set_emnu(const ::std::string& value);
  void set_emnu(const char* value);
  void set_emnu(const char* value, size_t size);
  ::std::string* mutable_emnu();
  ::std::string* release_emnu();
  void set_allocated_emnu(::std::string* emnu);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required int32 mask1 = 3;
  bool has_mask1() const;
  void clear_mask1();
  static const int kMask1FieldNumber = 3;
  ::google::protobuf::int32 mask1() const;
  void set_mask1(::google::protobuf::int32 value);

  // required int32 mask2 = 4;
  bool has_mask2() const;
  void clear_mask2();
  static const int kMask2FieldNumber = 4;
  ::google::protobuf::int32 mask2() const;
  void set_mask2(::google::protobuf::int32 value);

  // required string cfg = 5;
  bool has_cfg() const;
  void clear_cfg();
  static const int kCfgFieldNumber = 5;
  const ::std::string& cfg() const;
  void set_cfg(const ::std::string& value);
  void set_cfg(const char* value);
  void set_cfg(const char* value, size_t size);
  ::std::string* mutable_cfg();
  ::std::string* release_cfg();
  void set_allocated_cfg(::std::string* cfg);

  // required string scope = 6;
  bool has_scope() const;
  void clear_scope();
  static const int kScopeFieldNumber = 6;
  const ::std::string& scope() const;
  void set_scope(const ::std::string& value);
  void set_scope(const char* value);
  void set_scope(const char* value, size_t size);
  ::std::string* mutable_scope();
  ::std::string* release_scope();
  void set_allocated_scope(::std::string* scope);

  // @@protoc_insertion_point(class_scope:Czhtdev.ConfigDescribe)
 private:
  inline void set_has_emnu();
  inline void clear_has_emnu();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_mask1();
  inline void clear_has_mask1();
  inline void set_has_mask2();
  inline void clear_has_mask2();
  inline void set_has_cfg();
  inline void clear_has_cfg();
  inline void set_has_scope();
  inline void clear_has_scope();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr emnu_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr cfg_;
  ::google::protobuf::internal::ArenaStringPtr scope_;
  ::google::protobuf::int32 mask1_;
  ::google::protobuf::int32 mask2_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConfigDescribe> ConfigDescribe_default_instance_;

// -------------------------------------------------------------------

class ConfigPartDescribe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.ConfigPartDescribe) */ {
 public:
  ConfigPartDescribe();
  virtual ~ConfigPartDescribe();

  ConfigPartDescribe(const ConfigPartDescribe& from);

  inline ConfigPartDescribe& operator=(const ConfigPartDescribe& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigPartDescribe& default_instance();

  static const ConfigPartDescribe* internal_default_instance();

  void Swap(ConfigPartDescribe* other);

  // implements Message ----------------------------------------------

  inline ConfigPartDescribe* New() const { return New(NULL); }

  ConfigPartDescribe* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigPartDescribe& from);
  void MergeFrom(const ConfigPartDescribe& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigPartDescribe* other);
  void UnsafeMergeFrom(const ConfigPartDescribe& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string emnu = 1;
  bool has_emnu() const;
  void clear_emnu();
  static const int kEmnuFieldNumber = 1;
  const ::std::string& emnu() const;
  void set_emnu(const ::std::string& value);
  void set_emnu(const char* value);
  void set_emnu(const char* value, size_t size);
  ::std::string* mutable_emnu();
  ::std::string* release_emnu();
  void set_allocated_emnu(::std::string* emnu);

  // required int32 mask2 = 2;
  bool has_mask2() const;
  void clear_mask2();
  static const int kMask2FieldNumber = 2;
  ::google::protobuf::int32 mask2() const;
  void set_mask2(::google::protobuf::int32 value);

  // required string cfg = 3;
  bool has_cfg() const;
  void clear_cfg();
  static const int kCfgFieldNumber = 3;
  const ::std::string& cfg() const;
  void set_cfg(const ::std::string& value);
  void set_cfg(const char* value);
  void set_cfg(const char* value, size_t size);
  ::std::string* mutable_cfg();
  ::std::string* release_cfg();
  void set_allocated_cfg(::std::string* cfg);

  // required string scope = 4;
  bool has_scope() const;
  void clear_scope();
  static const int kScopeFieldNumber = 4;
  const ::std::string& scope() const;
  void set_scope(const ::std::string& value);
  void set_scope(const char* value);
  void set_scope(const char* value, size_t size);
  ::std::string* mutable_scope();
  ::std::string* release_scope();
  void set_allocated_scope(::std::string* scope);

  // @@protoc_insertion_point(class_scope:Czhtdev.ConfigPartDescribe)
 private:
  inline void set_has_emnu();
  inline void clear_has_emnu();
  inline void set_has_mask2();
  inline void clear_has_mask2();
  inline void set_has_cfg();
  inline void clear_has_cfg();
  inline void set_has_scope();
  inline void clear_has_scope();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr emnu_;
  ::google::protobuf::internal::ArenaStringPtr cfg_;
  ::google::protobuf::internal::ArenaStringPtr scope_;
  ::google::protobuf::int32 mask2_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConfigPartDescribe> ConfigPartDescribe_default_instance_;

// -------------------------------------------------------------------

class Week : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.Week) */ {
 public:
  Week();
  virtual ~Week();

  Week(const Week& from);

  inline Week& operator=(const Week& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Week& default_instance();

  static const Week* internal_default_instance();

  void Swap(Week* other);

  // implements Message ----------------------------------------------

  inline Week* New() const { return New(NULL); }

  Week* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Week& from);
  void MergeFrom(const Week& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Week* other);
  void UnsafeMergeFrom(const Week& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool week1 = 1;
  bool has_week1() const;
  void clear_week1();
  static const int kWeek1FieldNumber = 1;
  bool week1() const;
  void set_week1(bool value);

  // required bool week2 = 2;
  bool has_week2() const;
  void clear_week2();
  static const int kWeek2FieldNumber = 2;
  bool week2() const;
  void set_week2(bool value);

  // required bool week3 = 3;
  bool has_week3() const;
  void clear_week3();
  static const int kWeek3FieldNumber = 3;
  bool week3() const;
  void set_week3(bool value);

  // required bool week4 = 4;
  bool has_week4() const;
  void clear_week4();
  static const int kWeek4FieldNumber = 4;
  bool week4() const;
  void set_week4(bool value);

  // required bool week5 = 5;
  bool has_week5() const;
  void clear_week5();
  static const int kWeek5FieldNumber = 5;
  bool week5() const;
  void set_week5(bool value);

  // required bool week6 = 6;
  bool has_week6() const;
  void clear_week6();
  static const int kWeek6FieldNumber = 6;
  bool week6() const;
  void set_week6(bool value);

  // required bool week7 = 7;
  bool has_week7() const;
  void clear_week7();
  static const int kWeek7FieldNumber = 7;
  bool week7() const;
  void set_week7(bool value);

  // @@protoc_insertion_point(class_scope:Czhtdev.Week)
 private:
  inline void set_has_week1();
  inline void clear_has_week1();
  inline void set_has_week2();
  inline void clear_has_week2();
  inline void set_has_week3();
  inline void clear_has_week3();
  inline void set_has_week4();
  inline void clear_has_week4();
  inline void set_has_week5();
  inline void clear_has_week5();
  inline void set_has_week6();
  inline void clear_has_week6();
  inline void set_has_week7();
  inline void clear_has_week7();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool week1_;
  bool week2_;
  bool week3_;
  bool week4_;
  bool week5_;
  bool week6_;
  bool week7_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Week> Week_default_instance_;

// -------------------------------------------------------------------

class TimeAuth : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.TimeAuth) */ {
 public:
  TimeAuth();
  virtual ~TimeAuth();

  TimeAuth(const TimeAuth& from);

  inline TimeAuth& operator=(const TimeAuth& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeAuth& default_instance();

  static const TimeAuth* internal_default_instance();

  void Swap(TimeAuth* other);

  // implements Message ----------------------------------------------

  inline TimeAuth* New() const { return New(NULL); }

  TimeAuth* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeAuth& from);
  void MergeFrom(const TimeAuth& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TimeAuth* other);
  void UnsafeMergeFrom(const TimeAuth& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 start_date = 1;
  bool has_start_date() const;
  void clear_start_date();
  static const int kStartDateFieldNumber = 1;
  ::google::protobuf::uint64 start_date() const;
  void set_start_date(::google::protobuf::uint64 value);

  // required uint64 end_date = 2;
  bool has_end_date() const;
  void clear_end_date();
  static const int kEndDateFieldNumber = 2;
  ::google::protobuf::uint64 end_date() const;
  void set_end_date(::google::protobuf::uint64 value);

  // required int32 start_time = 3;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  ::google::protobuf::int32 start_time() const;
  void set_start_time(::google::protobuf::int32 value);

  // required int32 end_time = 4;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  ::google::protobuf::int32 end_time() const;
  void set_end_time(::google::protobuf::int32 value);

  // optional .Czhtdev.Week weekday = 5;
  bool has_weekday() const;
  void clear_weekday();
  static const int kWeekdayFieldNumber = 5;
  const ::Czhtdev::Week& weekday() const;
  ::Czhtdev::Week* mutable_weekday();
  ::Czhtdev::Week* release_weekday();
  void set_allocated_weekday(::Czhtdev::Week* weekday);

  // @@protoc_insertion_point(class_scope:Czhtdev.TimeAuth)
 private:
  inline void set_has_start_date();
  inline void clear_has_start_date();
  inline void set_has_end_date();
  inline void clear_has_end_date();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_weekday();
  inline void clear_has_weekday();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Czhtdev::Week* weekday_;
  ::google::protobuf::uint64 start_date_;
  ::google::protobuf::uint64 end_date_;
  ::google::protobuf::int32 start_time_;
  ::google::protobuf::int32 end_time_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TimeAuth> TimeAuth_default_instance_;

// -------------------------------------------------------------------

class UserPic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.UserPic) */ {
 public:
  UserPic();
  virtual ~UserPic();

  UserPic(const UserPic& from);

  inline UserPic& operator=(const UserPic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserPic& default_instance();

  static const UserPic* internal_default_instance();

  void Swap(UserPic* other);

  // implements Message ----------------------------------------------

  inline UserPic* New() const { return New(NULL); }

  UserPic* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserPic& from);
  void MergeFrom(const UserPic& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserPic* other);
  void UnsafeMergeFrom(const UserPic& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 user_pic_id = 1;
  bool has_user_pic_id() const;
  void clear_user_pic_id();
  static const int kUserPicIdFieldNumber = 1;
  ::google::protobuf::int32 user_pic_id() const;
  void set_user_pic_id(::google::protobuf::int32 value);

  // required bytes face_data = 2;
  bool has_face_data() const;
  void clear_face_data();
  static const int kFaceDataFieldNumber = 2;
  const ::std::string& face_data() const;
  void set_face_data(const ::std::string& value);
  void set_face_data(const char* value);
  void set_face_data(const void* value, size_t size);
  ::std::string* mutable_face_data();
  ::std::string* release_face_data();
  void set_allocated_face_data(::std::string* face_data);

  // @@protoc_insertion_point(class_scope:Czhtdev.UserPic)
 private:
  inline void set_has_user_pic_id();
  inline void clear_has_user_pic_id();
  inline void set_has_face_data();
  inline void clear_has_face_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr face_data_;
  ::google::protobuf::int32 user_pic_id_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserPic> UserPic_default_instance_;

// -------------------------------------------------------------------

class User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.User) */ {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  static const User* internal_default_instance();

  void Swap(User* other);

  // implements Message ----------------------------------------------

  inline User* New() const { return New(NULL); }

  User* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(User* other);
  void UnsafeMergeFrom(const User& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // required string user_name = 2;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // required string sex = 3;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  const ::std::string& sex() const;
  void set_sex(const ::std::string& value);
  void set_sex(const char* value);
  void set_sex(const char* value, size_t size);
  ::std::string* mutable_sex();
  ::std::string* release_sex();
  void set_allocated_sex(::std::string* sex);

  // required bool user_areas = 4;
  bool has_user_areas() const;
  void clear_user_areas();
  static const int kUserAreasFieldNumber = 4;
  bool user_areas() const;
  void set_user_areas(bool value);

  // repeated .Czhtdev.UserPic user_register_pics = 5;
  int user_register_pics_size() const;
  void clear_user_register_pics();
  static const int kUserRegisterPicsFieldNumber = 5;
  const ::Czhtdev::UserPic& user_register_pics(int index) const;
  ::Czhtdev::UserPic* mutable_user_register_pics(int index);
  ::Czhtdev::UserPic* add_user_register_pics();
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::UserPic >*
      mutable_user_register_pics();
  const ::google::protobuf::RepeatedPtrField< ::Czhtdev::UserPic >&
      user_register_pics() const;

  // optional int32 user_type = 6;
  bool has_user_type() const;
  void clear_user_type();
  static const int kUserTypeFieldNumber = 6;
  ::google::protobuf::int32 user_type() const;
  void set_user_type(::google::protobuf::int32 value);

  // optional uint64 visit_starttime = 7;
  bool has_visit_starttime() const;
  void clear_visit_starttime();
  static const int kVisitStarttimeFieldNumber = 7;
  ::google::protobuf::uint64 visit_starttime() const;
  void set_visit_starttime(::google::protobuf::uint64 value);

  // optional uint64 visit_endtime = 8;
  bool has_visit_endtime() const;
  void clear_visit_endtime();
  static const int kVisitEndtimeFieldNumber = 8;
  ::google::protobuf::uint64 visit_endtime() const;
  void set_visit_endtime(::google::protobuf::uint64 value);

  // optional .Czhtdev.TimeAuth user_time_auth = 9;
  bool has_user_time_auth() const;
  void clear_user_time_auth();
  static const int kUserTimeAuthFieldNumber = 9;
  const ::Czhtdev::TimeAuth& user_time_auth() const;
  ::Czhtdev::TimeAuth* mutable_user_time_auth();
  ::Czhtdev::TimeAuth* release_user_time_auth();
  void set_allocated_user_time_auth(::Czhtdev::TimeAuth* user_time_auth);

  // optional bytes fingerprint_data = 10;
  bool has_fingerprint_data() const;
  void clear_fingerprint_data();
  static const int kFingerprintDataFieldNumber = 10;
  const ::std::string& fingerprint_data() const;
  void set_fingerprint_data(const ::std::string& value);
  void set_fingerprint_data(const char* value);
  void set_fingerprint_data(const void* value, size_t size);
  ::std::string* mutable_fingerprint_data();
  ::std::string* release_fingerprint_data();
  void set_allocated_fingerprint_data(::std::string* fingerprint_data);

  // optional string company_id = 11;
  bool has_company_id() const;
  void clear_company_id();
  static const int kCompanyIdFieldNumber = 11;
  const ::std::string& company_id() const;
  void set_company_id(const ::std::string& value);
  void set_company_id(const char* value);
  void set_company_id(const char* value, size_t size);
  ::std::string* mutable_company_id();
  ::std::string* release_company_id();
  void set_allocated_company_id(::std::string* company_id);

  // optional string card = 12;
  bool has_card() const;
  void clear_card();
  static const int kCardFieldNumber = 12;
  const ::std::string& card() const;
  void set_card(const ::std::string& value);
  void set_card(const char* value);
  void set_card(const char* value, size_t size);
  ::std::string* mutable_card();
  ::std::string* release_card();
  void set_allocated_card(::std::string* card);

  // optional string id_card = 13;
  bool has_id_card() const;
  void clear_id_card();
  static const int kIdCardFieldNumber = 13;
  const ::std::string& id_card() const;
  void set_id_card(const ::std::string& value);
  void set_id_card(const char* value);
  void set_id_card(const char* value, size_t size);
  ::std::string* mutable_id_card();
  ::std::string* release_id_card();
  void set_allocated_id_card(::std::string* id_card);

  // @@protoc_insertion_point(class_scope:Czhtdev.User)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_user_areas();
  inline void clear_has_user_areas();
  inline void set_has_user_type();
  inline void clear_has_user_type();
  inline void set_has_visit_starttime();
  inline void clear_has_visit_starttime();
  inline void set_has_visit_endtime();
  inline void clear_has_visit_endtime();
  inline void set_has_user_time_auth();
  inline void clear_has_user_time_auth();
  inline void set_has_fingerprint_data();
  inline void clear_has_fingerprint_data();
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_id_card();
  inline void clear_has_id_card();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::UserPic > user_register_pics_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr sex_;
  ::google::protobuf::internal::ArenaStringPtr fingerprint_data_;
  ::google::protobuf::internal::ArenaStringPtr company_id_;
  ::google::protobuf::internal::ArenaStringPtr card_;
  ::google::protobuf::internal::ArenaStringPtr id_card_;
  ::Czhtdev::TimeAuth* user_time_auth_;
  bool user_areas_;
  ::google::protobuf::int32 user_type_;
  ::google::protobuf::uint64 visit_starttime_;
  ::google::protobuf::uint64 visit_endtime_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<User> User_default_instance_;

// -------------------------------------------------------------------

class UserList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.UserList) */ {
 public:
  UserList();
  virtual ~UserList();

  UserList(const UserList& from);

  inline UserList& operator=(const UserList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserList& default_instance();

  static const UserList* internal_default_instance();

  void Swap(UserList* other);

  // implements Message ----------------------------------------------

  inline UserList* New() const { return New(NULL); }

  UserList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserList& from);
  void MergeFrom(const UserList& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserList* other);
  void UnsafeMergeFrom(const UserList& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // required string user_name = 2;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // required string sex = 3;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  const ::std::string& sex() const;
  void set_sex(const ::std::string& value);
  void set_sex(const char* value);
  void set_sex(const char* value, size_t size);
  ::std::string* mutable_sex();
  ::std::string* release_sex();
  void set_allocated_sex(::std::string* sex);

  // required bool user_areas = 4;
  bool has_user_areas() const;
  void clear_user_areas();
  static const int kUserAreasFieldNumber = 4;
  bool user_areas() const;
  void set_user_areas(bool value);

  // repeated int32 pics_id = 5;
  int pics_id_size() const;
  void clear_pics_id();
  static const int kPicsIdFieldNumber = 5;
  ::google::protobuf::int32 pics_id(int index) const;
  void set_pics_id(int index, ::google::protobuf::int32 value);
  void add_pics_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pics_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pics_id();

  // optional int32 user_type = 6;
  bool has_user_type() const;
  void clear_user_type();
  static const int kUserTypeFieldNumber = 6;
  ::google::protobuf::int32 user_type() const;
  void set_user_type(::google::protobuf::int32 value);

  // optional uint64 visit_starttime = 7;
  bool has_visit_starttime() const;
  void clear_visit_starttime();
  static const int kVisitStarttimeFieldNumber = 7;
  ::google::protobuf::uint64 visit_starttime() const;
  void set_visit_starttime(::google::protobuf::uint64 value);

  // optional uint64 visit_endtime = 8;
  bool has_visit_endtime() const;
  void clear_visit_endtime();
  static const int kVisitEndtimeFieldNumber = 8;
  ::google::protobuf::uint64 visit_endtime() const;
  void set_visit_endtime(::google::protobuf::uint64 value);

  // optional .Czhtdev.TimeAuth user_time_auth = 9;
  bool has_user_time_auth() const;
  void clear_user_time_auth();
  static const int kUserTimeAuthFieldNumber = 9;
  const ::Czhtdev::TimeAuth& user_time_auth() const;
  ::Czhtdev::TimeAuth* mutable_user_time_auth();
  ::Czhtdev::TimeAuth* release_user_time_auth();
  void set_allocated_user_time_auth(::Czhtdev::TimeAuth* user_time_auth);

  // optional string company_id = 10;
  bool has_company_id() const;
  void clear_company_id();
  static const int kCompanyIdFieldNumber = 10;
  const ::std::string& company_id() const;
  void set_company_id(const ::std::string& value);
  void set_company_id(const char* value);
  void set_company_id(const char* value, size_t size);
  ::std::string* mutable_company_id();
  ::std::string* release_company_id();
  void set_allocated_company_id(::std::string* company_id);

  // optional string card = 11;
  bool has_card() const;
  void clear_card();
  static const int kCardFieldNumber = 11;
  const ::std::string& card() const;
  void set_card(const ::std::string& value);
  void set_card(const char* value);
  void set_card(const char* value, size_t size);
  ::std::string* mutable_card();
  ::std::string* release_card();
  void set_allocated_card(::std::string* card);

  // optional string id_card = 12;
  bool has_id_card() const;
  void clear_id_card();
  static const int kIdCardFieldNumber = 12;
  const ::std::string& id_card() const;
  void set_id_card(const ::std::string& value);
  void set_id_card(const char* value);
  void set_id_card(const char* value, size_t size);
  ::std::string* mutable_id_card();
  ::std::string* release_id_card();
  void set_allocated_id_card(::std::string* id_card);

  // optional int32 modify_type = 13;
  bool has_modify_type() const;
  void clear_modify_type();
  static const int kModifyTypeFieldNumber = 13;
  ::google::protobuf::int32 modify_type() const;
  void set_modify_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Czhtdev.UserList)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_user_areas();
  inline void clear_has_user_areas();
  inline void set_has_user_type();
  inline void clear_has_user_type();
  inline void set_has_visit_starttime();
  inline void clear_has_visit_starttime();
  inline void set_has_visit_endtime();
  inline void clear_has_visit_endtime();
  inline void set_has_user_time_auth();
  inline void clear_has_user_time_auth();
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_id_card();
  inline void clear_has_id_card();
  inline void set_has_modify_type();
  inline void clear_has_modify_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pics_id_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr sex_;
  ::google::protobuf::internal::ArenaStringPtr company_id_;
  ::google::protobuf::internal::ArenaStringPtr card_;
  ::google::protobuf::internal::ArenaStringPtr id_card_;
  ::Czhtdev::TimeAuth* user_time_auth_;
  bool user_areas_;
  ::google::protobuf::int32 user_type_;
  ::google::protobuf::uint64 visit_starttime_;
  ::google::protobuf::uint64 visit_endtime_;
  ::google::protobuf::int32 modify_type_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserList> UserList_default_instance_;

// -------------------------------------------------------------------

class DeleteLocalUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.DeleteLocalUser) */ {
 public:
  DeleteLocalUser();
  virtual ~DeleteLocalUser();

  DeleteLocalUser(const DeleteLocalUser& from);

  inline DeleteLocalUser& operator=(const DeleteLocalUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteLocalUser& default_instance();

  static const DeleteLocalUser* internal_default_instance();

  void Swap(DeleteLocalUser* other);

  // implements Message ----------------------------------------------

  inline DeleteLocalUser* New() const { return New(NULL); }

  DeleteLocalUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteLocalUser& from);
  void MergeFrom(const DeleteLocalUser& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteLocalUser* other);
  void UnsafeMergeFrom(const DeleteLocalUser& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // @@protoc_insertion_point(class_scope:Czhtdev.DeleteLocalUser)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteLocalUser> DeleteLocalUser_default_instance_;

// -------------------------------------------------------------------

class QueryLocalUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.QueryLocalUser) */ {
 public:
  QueryLocalUser();
  virtual ~QueryLocalUser();

  QueryLocalUser(const QueryLocalUser& from);

  inline QueryLocalUser& operator=(const QueryLocalUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryLocalUser& default_instance();

  static const QueryLocalUser* internal_default_instance();

  void Swap(QueryLocalUser* other);

  // implements Message ----------------------------------------------

  inline QueryLocalUser* New() const { return New(NULL); }

  QueryLocalUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryLocalUser& from);
  void MergeFrom(const QueryLocalUser& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryLocalUser* other);
  void UnsafeMergeFrom(const QueryLocalUser& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // @@protoc_insertion_point(class_scope:Czhtdev.QueryLocalUser)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryLocalUser> QueryLocalUser_default_instance_;

// -------------------------------------------------------------------

class QueryLocalUserList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.QueryLocalUserList) */ {
 public:
  QueryLocalUserList();
  virtual ~QueryLocalUserList();

  QueryLocalUserList(const QueryLocalUserList& from);

  inline QueryLocalUserList& operator=(const QueryLocalUserList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryLocalUserList& default_instance();

  static const QueryLocalUserList* internal_default_instance();

  void Swap(QueryLocalUserList* other);

  // implements Message ----------------------------------------------

  inline QueryLocalUserList* New() const { return New(NULL); }

  QueryLocalUserList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryLocalUserList& from);
  void MergeFrom(const QueryLocalUserList& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryLocalUserList* other);
  void UnsafeMergeFrom(const QueryLocalUserList& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Czhtdev.QueryLocalUserList)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryLocalUserList> QueryLocalUserList_default_instance_;

// -------------------------------------------------------------------

class QueryPassageRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.QueryPassageRecord) */ {
 public:
  QueryPassageRecord();
  virtual ~QueryPassageRecord();

  QueryPassageRecord(const QueryPassageRecord& from);

  inline QueryPassageRecord& operator=(const QueryPassageRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPassageRecord& default_instance();

  static const QueryPassageRecord* internal_default_instance();

  void Swap(QueryPassageRecord* other);

  // implements Message ----------------------------------------------

  inline QueryPassageRecord* New() const { return New(NULL); }

  QueryPassageRecord* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryPassageRecord& from);
  void MergeFrom(const QueryPassageRecord& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryPassageRecord* other);
  void UnsafeMergeFrom(const QueryPassageRecord& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Czhtdev.QueryPassageRecord)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryPassageRecord> QueryPassageRecord_default_instance_;

// -------------------------------------------------------------------

class QueryPassageRecordList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.QueryPassageRecordList) */ {
 public:
  QueryPassageRecordList();
  virtual ~QueryPassageRecordList();

  QueryPassageRecordList(const QueryPassageRecordList& from);

  inline QueryPassageRecordList& operator=(const QueryPassageRecordList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPassageRecordList& default_instance();

  static const QueryPassageRecordList* internal_default_instance();

  void Swap(QueryPassageRecordList* other);

  // implements Message ----------------------------------------------

  inline QueryPassageRecordList* New() const { return New(NULL); }

  QueryPassageRecordList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryPassageRecordList& from);
  void MergeFrom(const QueryPassageRecordList& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryPassageRecordList* other);
  void UnsafeMergeFrom(const QueryPassageRecordList& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .Czhtdev.TimePeriod time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  const ::Czhtdev::TimePeriod& time() const;
  ::Czhtdev::TimePeriod* mutable_time();
  ::Czhtdev::TimePeriod* release_time();
  void set_allocated_time(::Czhtdev::TimePeriod* time);

  // @@protoc_insertion_point(class_scope:Czhtdev.QueryPassageRecordList)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::Czhtdev::TimePeriod* time_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryPassageRecordList> QueryPassageRecordList_default_instance_;

// -------------------------------------------------------------------

class TimePeriod : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.TimePeriod) */ {
 public:
  TimePeriod();
  virtual ~TimePeriod();

  TimePeriod(const TimePeriod& from);

  inline TimePeriod& operator=(const TimePeriod& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimePeriod& default_instance();

  static const TimePeriod* internal_default_instance();

  void Swap(TimePeriod* other);

  // implements Message ----------------------------------------------

  inline TimePeriod* New() const { return New(NULL); }

  TimePeriod* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimePeriod& from);
  void MergeFrom(const TimePeriod& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TimePeriod* other);
  void UnsafeMergeFrom(const TimePeriod& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 begintime = 1;
  bool has_begintime() const;
  void clear_begintime();
  static const int kBegintimeFieldNumber = 1;
  ::google::protobuf::uint64 begintime() const;
  void set_begintime(::google::protobuf::uint64 value);

  // required uint64 endtime = 2;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndtimeFieldNumber = 2;
  ::google::protobuf::uint64 endtime() const;
  void set_endtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Czhtdev.TimePeriod)
 private:
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 begintime_;
  ::google::protobuf::uint64 endtime_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TimePeriod> TimePeriod_default_instance_;

// -------------------------------------------------------------------

class PassageRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.PassageRecord) */ {
 public:
  PassageRecord();
  virtual ~PassageRecord();

  PassageRecord(const PassageRecord& from);

  inline PassageRecord& operator=(const PassageRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassageRecord& default_instance();

  static const PassageRecord* internal_default_instance();

  void Swap(PassageRecord* other);

  // implements Message ----------------------------------------------

  inline PassageRecord* New() const { return New(NULL); }

  PassageRecord* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassageRecord& from);
  void MergeFrom(const PassageRecord& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PassageRecord* other);
  void UnsafeMergeFrom(const PassageRecord& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required bytes image = 2;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 2;
  const ::std::string& image() const;
  void set_image(const ::std::string& value);
  void set_image(const char* value);
  void set_image(const void* value, size_t size);
  ::std::string* mutable_image();
  ::std::string* release_image();
  void set_allocated_image(::std::string* image);

  // required uint64 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // optional string user_id = 4;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool permission_time = 6;
  bool has_permission_time() const;
  void clear_permission_time();
  static const int kPermissionTimeFieldNumber = 6;
  bool permission_time() const;
  void set_permission_time(bool value);

  // optional bool permission_area = 7;
  bool has_permission_area() const;
  void clear_permission_area();
  static const int kPermissionAreaFieldNumber = 7;
  bool permission_area() const;
  void set_permission_area(bool value);

  // optional bool living = 8;
  bool has_living() const;
  void clear_living();
  static const int kLivingFieldNumber = 8;
  bool living() const;
  void set_living(bool value);

  // optional int32 type = 9;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 9;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 score = 10;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 10;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // optional .Czhtdev.Face_Param faceparam = 11;
  bool has_faceparam() const;
  void clear_faceparam();
  static const int kFaceparamFieldNumber = 11;
  const ::Czhtdev::Face_Param& faceparam() const;
  ::Czhtdev::Face_Param* mutable_faceparam();
  ::Czhtdev::Face_Param* release_faceparam();
  void set_allocated_faceparam(::Czhtdev::Face_Param* faceparam);

  // @@protoc_insertion_point(class_scope:Czhtdev.PassageRecord)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_image();
  inline void clear_has_image();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_permission_time();
  inline void clear_has_permission_time();
  inline void set_has_permission_area();
  inline void clear_has_permission_area();
  inline void set_has_living();
  inline void clear_has_living();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_faceparam();
  inline void clear_has_faceparam();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr image_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::Czhtdev::Face_Param* faceparam_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 id_;
  bool permission_time_;
  bool permission_area_;
  bool living_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 score_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PassageRecord> PassageRecord_default_instance_;

// -------------------------------------------------------------------

class Face_Param : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.Face_Param) */ {
 public:
  Face_Param();
  virtual ~Face_Param();

  Face_Param(const Face_Param& from);

  inline Face_Param& operator=(const Face_Param& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Face_Param& default_instance();

  static const Face_Param* internal_default_instance();

  void Swap(Face_Param* other);

  // implements Message ----------------------------------------------

  inline Face_Param* New() const { return New(NULL); }

  Face_Param* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Face_Param& from);
  void MergeFrom(const Face_Param& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Face_Param* other);
  void UnsafeMergeFrom(const Face_Param& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 faceLeftTopX = 1;
  bool has_facelefttopx() const;
  void clear_facelefttopx();
  static const int kFaceLeftTopXFieldNumber = 1;
  ::google::protobuf::int32 facelefttopx() const;
  void set_facelefttopx(::google::protobuf::int32 value);

  // required int32 faceLeftTopY = 2;
  bool has_facelefttopy() const;
  void clear_facelefttopy();
  static const int kFaceLeftTopYFieldNumber = 2;
  ::google::protobuf::int32 facelefttopy() const;
  void set_facelefttopy(::google::protobuf::int32 value);

  // required int32 faceWidth = 3;
  bool has_facewidth() const;
  void clear_facewidth();
  static const int kFaceWidthFieldNumber = 3;
  ::google::protobuf::int32 facewidth() const;
  void set_facewidth(::google::protobuf::int32 value);

  // required int32 faceHeight = 4;
  bool has_faceheight() const;
  void clear_faceheight();
  static const int kFaceHeightFieldNumber = 4;
  ::google::protobuf::int32 faceheight() const;
  void set_faceheight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Czhtdev.Face_Param)
 private:
  inline void set_has_facelefttopx();
  inline void clear_has_facelefttopx();
  inline void set_has_facelefttopy();
  inline void clear_has_facelefttopy();
  inline void set_has_facewidth();
  inline void clear_has_facewidth();
  inline void set_has_faceheight();
  inline void clear_has_faceheight();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 facelefttopx_;
  ::google::protobuf::int32 facelefttopy_;
  ::google::protobuf::int32 facewidth_;
  ::google::protobuf::int32 faceheight_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Face_Param> Face_Param_default_instance_;

// -------------------------------------------------------------------

class PassageRecordList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.PassageRecordList) */ {
 public:
  PassageRecordList();
  virtual ~PassageRecordList();

  PassageRecordList(const PassageRecordList& from);

  inline PassageRecordList& operator=(const PassageRecordList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassageRecordList& default_instance();

  static const PassageRecordList* internal_default_instance();

  void Swap(PassageRecordList* other);

  // implements Message ----------------------------------------------

  inline PassageRecordList* New() const { return New(NULL); }

  PassageRecordList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassageRecordList& from);
  void MergeFrom(const PassageRecordList& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PassageRecordList* other);
  void UnsafeMergeFrom(const PassageRecordList& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required uint64 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // optional string user_id = 4;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool permission_time = 6;
  bool has_permission_time() const;
  void clear_permission_time();
  static const int kPermissionTimeFieldNumber = 6;
  bool permission_time() const;
  void set_permission_time(bool value);

  // optional bool permission_area = 7;
  bool has_permission_area() const;
  void clear_permission_area();
  static const int kPermissionAreaFieldNumber = 7;
  bool permission_area() const;
  void set_permission_area(bool value);

  // optional bool living = 8;
  bool has_living() const;
  void clear_living();
  static const int kLivingFieldNumber = 8;
  bool living() const;
  void set_living(bool value);

  // optional int32 type = 9;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 9;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Czhtdev.PassageRecordList)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_permission_time();
  inline void clear_has_permission_time();
  inline void set_has_permission_area();
  inline void clear_has_permission_area();
  inline void set_has_living();
  inline void clear_has_living();
  inline void set_has_type();
  inline void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 id_;
  bool permission_time_;
  bool permission_area_;
  bool living_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PassageRecordList> PassageRecordList_default_instance_;

// -------------------------------------------------------------------

class AddPicture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.AddPicture) */ {
 public:
  AddPicture();
  virtual ~AddPicture();

  AddPicture(const AddPicture& from);

  inline AddPicture& operator=(const AddPicture& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddPicture& default_instance();

  static const AddPicture* internal_default_instance();

  void Swap(AddPicture* other);

  // implements Message ----------------------------------------------

  inline AddPicture* New() const { return New(NULL); }

  AddPicture* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddPicture& from);
  void MergeFrom(const AddPicture& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddPicture* other);
  void UnsafeMergeFrom(const AddPicture& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // required int32 picture_id = 2;
  bool has_picture_id() const;
  void clear_picture_id();
  static const int kPictureIdFieldNumber = 2;
  ::google::protobuf::int32 picture_id() const;
  void set_picture_id(::google::protobuf::int32 value);

  // required bytes face_data = 3;
  bool has_face_data() const;
  void clear_face_data();
  static const int kFaceDataFieldNumber = 3;
  const ::std::string& face_data() const;
  void set_face_data(const ::std::string& value);
  void set_face_data(const char* value);
  void set_face_data(const void* value, size_t size);
  ::std::string* mutable_face_data();
  ::std::string* release_face_data();
  void set_allocated_face_data(::std::string* face_data);

  // @@protoc_insertion_point(class_scope:Czhtdev.AddPicture)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_picture_id();
  inline void clear_has_picture_id();
  inline void set_has_face_data();
  inline void clear_has_face_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr face_data_;
  ::google::protobuf::int32 picture_id_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AddPicture> AddPicture_default_instance_;

// -------------------------------------------------------------------

class UpdatePicture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.UpdatePicture) */ {
 public:
  UpdatePicture();
  virtual ~UpdatePicture();

  UpdatePicture(const UpdatePicture& from);

  inline UpdatePicture& operator=(const UpdatePicture& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePicture& default_instance();

  static const UpdatePicture* internal_default_instance();

  void Swap(UpdatePicture* other);

  // implements Message ----------------------------------------------

  inline UpdatePicture* New() const { return New(NULL); }

  UpdatePicture* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdatePicture& from);
  void MergeFrom(const UpdatePicture& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdatePicture* other);
  void UnsafeMergeFrom(const UpdatePicture& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // required int32 picture_old = 2;
  bool has_picture_old() const;
  void clear_picture_old();
  static const int kPictureOldFieldNumber = 2;
  ::google::protobuf::int32 picture_old() const;
  void set_picture_old(::google::protobuf::int32 value);

  // required int32 picture_new = 3;
  bool has_picture_new() const;
  void clear_picture_new();
  static const int kPictureNewFieldNumber = 3;
  ::google::protobuf::int32 picture_new() const;
  void set_picture_new(::google::protobuf::int32 value);

  // required bytes face_data = 4;
  bool has_face_data() const;
  void clear_face_data();
  static const int kFaceDataFieldNumber = 4;
  const ::std::string& face_data() const;
  void set_face_data(const ::std::string& value);
  void set_face_data(const char* value);
  void set_face_data(const void* value, size_t size);
  ::std::string* mutable_face_data();
  ::std::string* release_face_data();
  void set_allocated_face_data(::std::string* face_data);

  // @@protoc_insertion_point(class_scope:Czhtdev.UpdatePicture)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_picture_old();
  inline void clear_has_picture_old();
  inline void set_has_picture_new();
  inline void clear_has_picture_new();
  inline void set_has_face_data();
  inline void clear_has_face_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr face_data_;
  ::google::protobuf::int32 picture_old_;
  ::google::protobuf::int32 picture_new_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdatePicture> UpdatePicture_default_instance_;

// -------------------------------------------------------------------

class DelPicture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.DelPicture) */ {
 public:
  DelPicture();
  virtual ~DelPicture();

  DelPicture(const DelPicture& from);

  inline DelPicture& operator=(const DelPicture& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelPicture& default_instance();

  static const DelPicture* internal_default_instance();

  void Swap(DelPicture* other);

  // implements Message ----------------------------------------------

  inline DelPicture* New() const { return New(NULL); }

  DelPicture* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelPicture& from);
  void MergeFrom(const DelPicture& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DelPicture* other);
  void UnsafeMergeFrom(const DelPicture& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // required int32 picture_id = 2;
  bool has_picture_id() const;
  void clear_picture_id();
  static const int kPictureIdFieldNumber = 2;
  ::google::protobuf::int32 picture_id() const;
  void set_picture_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Czhtdev.DelPicture)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_picture_id();
  inline void clear_has_picture_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::int32 picture_id_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DelPicture> DelPicture_default_instance_;

// -------------------------------------------------------------------

class IDCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.IDCard) */ {
 public:
  IDCard();
  virtual ~IDCard();

  IDCard(const IDCard& from);

  inline IDCard& operator=(const IDCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IDCard& default_instance();

  static const IDCard* internal_default_instance();

  void Swap(IDCard* other);

  // implements Message ----------------------------------------------

  inline IDCard* New() const { return New(NULL); }

  IDCard* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IDCard& from);
  void MergeFrom(const IDCard& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IDCard* other);
  void UnsafeMergeFrom(const IDCard& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string card_id = 1;
  bool has_card_id() const;
  void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  const ::std::string& card_id() const;
  void set_card_id(const ::std::string& value);
  void set_card_id(const char* value);
  void set_card_id(const char* value, size_t size);
  ::std::string* mutable_card_id();
  ::std::string* release_card_id();
  void set_allocated_card_id(::std::string* card_id);

  // optional int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Czhtdev.IDCard)
 private:
  inline void set_has_card_id();
  inline void clear_has_card_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr card_id_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IDCard> IDCard_default_instance_;

// -------------------------------------------------------------------

class IPTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.IPTable) */ {
 public:
  IPTable();
  virtual ~IPTable();

  IPTable(const IPTable& from);

  inline IPTable& operator=(const IPTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IPTable& default_instance();

  static const IPTable* internal_default_instance();

  void Swap(IPTable* other);

  // implements Message ----------------------------------------------

  inline IPTable* New() const { return New(NULL); }

  IPTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IPTable& from);
  void MergeFrom(const IPTable& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IPTable* other);
  void UnsafeMergeFrom(const IPTable& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // required string house_number = 2;
  bool has_house_number() const;
  void clear_house_number();
  static const int kHouseNumberFieldNumber = 2;
  const ::std::string& house_number() const;
  void set_house_number(const ::std::string& value);
  void set_house_number(const char* value);
  void set_house_number(const char* value, size_t size);
  ::std::string* mutable_house_number();
  ::std::string* release_house_number();
  void set_allocated_house_number(::std::string* house_number);

  // @@protoc_insertion_point(class_scope:Czhtdev.IPTable)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_house_number();
  inline void clear_has_house_number();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr house_number_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IPTable> IPTable_default_instance_;

// -------------------------------------------------------------------

class IP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.IP) */ {
 public:
  IP();
  virtual ~IP();

  IP(const IP& from);

  inline IP& operator=(const IP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IP& default_instance();

  static const IP* internal_default_instance();

  void Swap(IP* other);

  // implements Message ----------------------------------------------

  inline IP* New() const { return New(NULL); }

  IP* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IP& from);
  void MergeFrom(const IP& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IP* other);
  void UnsafeMergeFrom(const IP& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // @@protoc_insertion_point(class_scope:Czhtdev.IP)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IP> IP_default_instance_;

// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static const Request* internal_default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  void UnsafeMergeFrom(const Request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Czhtdev.User add_user = 1;
  bool has_add_user() const;
  void clear_add_user();
  static const int kAddUserFieldNumber = 1;
  const ::Czhtdev::User& add_user() const;
  ::Czhtdev::User* mutable_add_user();
  ::Czhtdev::User* release_add_user();
  void set_allocated_add_user(::Czhtdev::User* add_user);

  // optional .Czhtdev.DeleteLocalUser detele_user = 2;
  bool has_detele_user() const;
  void clear_detele_user();
  static const int kDeteleUserFieldNumber = 2;
  const ::Czhtdev::DeleteLocalUser& detele_user() const;
  ::Czhtdev::DeleteLocalUser* mutable_detele_user();
  ::Czhtdev::DeleteLocalUser* release_detele_user();
  void set_allocated_detele_user(::Czhtdev::DeleteLocalUser* detele_user);

  // optional .Czhtdev.User update_user = 3;
  bool has_update_user() const;
  void clear_update_user();
  static const int kUpdateUserFieldNumber = 3;
  const ::Czhtdev::User& update_user() const;
  ::Czhtdev::User* mutable_update_user();
  ::Czhtdev::User* release_update_user();
  void set_allocated_update_user(::Czhtdev::User* update_user);

  // optional .Czhtdev.QueryLocalUser query_user = 4;
  bool has_query_user() const;
  void clear_query_user();
  static const int kQueryUserFieldNumber = 4;
  const ::Czhtdev::QueryLocalUser& query_user() const;
  ::Czhtdev::QueryLocalUser* mutable_query_user();
  ::Czhtdev::QueryLocalUser* release_query_user();
  void set_allocated_query_user(::Czhtdev::QueryLocalUser* query_user);

  // optional .Czhtdev.QueryLocalUserList query_user_list = 5;
  bool has_query_user_list() const;
  void clear_query_user_list();
  static const int kQueryUserListFieldNumber = 5;
  const ::Czhtdev::QueryLocalUserList& query_user_list() const;
  ::Czhtdev::QueryLocalUserList* mutable_query_user_list();
  ::Czhtdev::QueryLocalUserList* release_query_user_list();
  void set_allocated_query_user_list(::Czhtdev::QueryLocalUserList* query_user_list);

  // optional .Czhtdev.AddPicture add_picture = 6;
  bool has_add_picture() const;
  void clear_add_picture();
  static const int kAddPictureFieldNumber = 6;
  const ::Czhtdev::AddPicture& add_picture() const;
  ::Czhtdev::AddPicture* mutable_add_picture();
  ::Czhtdev::AddPicture* release_add_picture();
  void set_allocated_add_picture(::Czhtdev::AddPicture* add_picture);

  // optional .Czhtdev.UpdatePicture update_picture = 7;
  bool has_update_picture() const;
  void clear_update_picture();
  static const int kUpdatePictureFieldNumber = 7;
  const ::Czhtdev::UpdatePicture& update_picture() const;
  ::Czhtdev::UpdatePicture* mutable_update_picture();
  ::Czhtdev::UpdatePicture* release_update_picture();
  void set_allocated_update_picture(::Czhtdev::UpdatePicture* update_picture);

  // optional .Czhtdev.DelPicture detele_picture = 8;
  bool has_detele_picture() const;
  void clear_detele_picture();
  static const int kDetelePictureFieldNumber = 8;
  const ::Czhtdev::DelPicture& detele_picture() const;
  ::Czhtdev::DelPicture* mutable_detele_picture();
  ::Czhtdev::DelPicture* release_detele_picture();
  void set_allocated_detele_picture(::Czhtdev::DelPicture* detele_picture);

  // optional .Czhtdev.QueryPassageRecord query_record = 9;
  bool has_query_record() const;
  void clear_query_record();
  static const int kQueryRecordFieldNumber = 9;
  const ::Czhtdev::QueryPassageRecord& query_record() const;
  ::Czhtdev::QueryPassageRecord* mutable_query_record();
  ::Czhtdev::QueryPassageRecord* release_query_record();
  void set_allocated_query_record(::Czhtdev::QueryPassageRecord* query_record);

  // optional .Czhtdev.QueryPassageRecordList query_record_list = 10;
  bool has_query_record_list() const;
  void clear_query_record_list();
  static const int kQueryRecordListFieldNumber = 10;
  const ::Czhtdev::QueryPassageRecordList& query_record_list() const;
  ::Czhtdev::QueryPassageRecordList* mutable_query_record_list();
  ::Czhtdev::QueryPassageRecordList* release_query_record_list();
  void set_allocated_query_record_list(::Czhtdev::QueryPassageRecordList* query_record_list);

  // optional .Czhtdev.QueryPassageRecord synchronous_record = 11;
  bool has_synchronous_record() const;
  void clear_synchronous_record();
  static const int kSynchronousRecordFieldNumber = 11;
  const ::Czhtdev::QueryPassageRecord& synchronous_record() const;
  ::Czhtdev::QueryPassageRecord* mutable_synchronous_record();
  ::Czhtdev::QueryPassageRecord* release_synchronous_record();
  void set_allocated_synchronous_record(::Czhtdev::QueryPassageRecord* synchronous_record);

  // optional .Czhtdev.ModifyConfig modify_cfg = 12;
  bool has_modify_cfg() const;
  void clear_modify_cfg();
  static const int kModifyCfgFieldNumber = 12;
  const ::Czhtdev::ModifyConfig& modify_cfg() const;
  ::Czhtdev::ModifyConfig* mutable_modify_cfg();
  ::Czhtdev::ModifyConfig* release_modify_cfg();
  void set_allocated_modify_cfg(::Czhtdev::ModifyConfig* modify_cfg);

  // optional .Czhtdev.QueryConfig query_cfg = 13;
  bool has_query_cfg() const;
  void clear_query_cfg();
  static const int kQueryCfgFieldNumber = 13;
  const ::Czhtdev::QueryConfig& query_cfg() const;
  ::Czhtdev::QueryConfig* mutable_query_cfg();
  ::Czhtdev::QueryConfig* release_query_cfg();
  void set_allocated_query_cfg(::Czhtdev::QueryConfig* query_cfg);

  // optional .Czhtdev.IDCard add_card = 14;
  bool has_add_card() const;
  void clear_add_card();
  static const int kAddCardFieldNumber = 14;
  const ::Czhtdev::IDCard& add_card() const;
  ::Czhtdev::IDCard* mutable_add_card();
  ::Czhtdev::IDCard* release_add_card();
  void set_allocated_add_card(::Czhtdev::IDCard* add_card);

  // optional .Czhtdev.IDCard detele_card = 15;
  bool has_detele_card() const;
  void clear_detele_card();
  static const int kDeteleCardFieldNumber = 15;
  const ::Czhtdev::IDCard& detele_card() const;
  ::Czhtdev::IDCard* mutable_detele_card();
  ::Czhtdev::IDCard* release_detele_card();
  void set_allocated_detele_card(::Czhtdev::IDCard* detele_card);

  // optional .Czhtdev.IPTable add_ip = 16;
  bool has_add_ip() const;
  void clear_add_ip();
  static const int kAddIpFieldNumber = 16;
  const ::Czhtdev::IPTable& add_ip() const;
  ::Czhtdev::IPTable* mutable_add_ip();
  ::Czhtdev::IPTable* release_add_ip();
  void set_allocated_add_ip(::Czhtdev::IPTable* add_ip);

  // optional .Czhtdev.IP detele_ip = 17;
  bool has_detele_ip() const;
  void clear_detele_ip();
  static const int kDeteleIpFieldNumber = 17;
  const ::Czhtdev::IP& detele_ip() const;
  ::Czhtdev::IP* mutable_detele_ip();
  ::Czhtdev::IP* release_detele_ip();
  void set_allocated_detele_ip(::Czhtdev::IP* detele_ip);

  // @@protoc_insertion_point(class_scope:Czhtdev.Request)
 private:
  inline void set_has_add_user();
  inline void clear_has_add_user();
  inline void set_has_detele_user();
  inline void clear_has_detele_user();
  inline void set_has_update_user();
  inline void clear_has_update_user();
  inline void set_has_query_user();
  inline void clear_has_query_user();
  inline void set_has_query_user_list();
  inline void clear_has_query_user_list();
  inline void set_has_add_picture();
  inline void clear_has_add_picture();
  inline void set_has_update_picture();
  inline void clear_has_update_picture();
  inline void set_has_detele_picture();
  inline void clear_has_detele_picture();
  inline void set_has_query_record();
  inline void clear_has_query_record();
  inline void set_has_query_record_list();
  inline void clear_has_query_record_list();
  inline void set_has_synchronous_record();
  inline void clear_has_synchronous_record();
  inline void set_has_modify_cfg();
  inline void clear_has_modify_cfg();
  inline void set_has_query_cfg();
  inline void clear_has_query_cfg();
  inline void set_has_add_card();
  inline void clear_has_add_card();
  inline void set_has_detele_card();
  inline void clear_has_detele_card();
  inline void set_has_add_ip();
  inline void clear_has_add_ip();
  inline void set_has_detele_ip();
  inline void clear_has_detele_ip();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Czhtdev::User* add_user_;
  ::Czhtdev::DeleteLocalUser* detele_user_;
  ::Czhtdev::User* update_user_;
  ::Czhtdev::QueryLocalUser* query_user_;
  ::Czhtdev::QueryLocalUserList* query_user_list_;
  ::Czhtdev::AddPicture* add_picture_;
  ::Czhtdev::UpdatePicture* update_picture_;
  ::Czhtdev::DelPicture* detele_picture_;
  ::Czhtdev::QueryPassageRecord* query_record_;
  ::Czhtdev::QueryPassageRecordList* query_record_list_;
  ::Czhtdev::QueryPassageRecord* synchronous_record_;
  ::Czhtdev::ModifyConfig* modify_cfg_;
  ::Czhtdev::QueryConfig* query_cfg_;
  ::Czhtdev::IDCard* add_card_;
  ::Czhtdev::IDCard* detele_card_;
  ::Czhtdev::IPTable* add_ip_;
  ::Czhtdev::IP* detele_ip_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Request> Request_default_instance_;

// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static const Response* internal_default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  void UnsafeMergeFrom(const Response& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // optional .Czhtdev.ErrorType error_code = 2;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  ::Czhtdev::ErrorType error_code() const;
  void set_error_code(::Czhtdev::ErrorType value);

  // optional string error_description = 3;
  bool has_error_description() const;
  void clear_error_description();
  static const int kErrorDescriptionFieldNumber = 3;
  const ::std::string& error_description() const;
  void set_error_description(const ::std::string& value);
  void set_error_description(const char* value);
  void set_error_description(const char* value, size_t size);
  ::std::string* mutable_error_description();
  ::std::string* release_error_description();
  void set_allocated_error_description(::std::string* error_description);

  // optional .Czhtdev.User user = 5;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 5;
  const ::Czhtdev::User& user() const;
  ::Czhtdev::User* mutable_user();
  ::Czhtdev::User* release_user();
  void set_allocated_user(::Czhtdev::User* user);

  // repeated .Czhtdev.UserList user_list = 6;
  int user_list_size() const;
  void clear_user_list();
  static const int kUserListFieldNumber = 6;
  const ::Czhtdev::UserList& user_list(int index) const;
  ::Czhtdev::UserList* mutable_user_list(int index);
  ::Czhtdev::UserList* add_user_list();
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::UserList >*
      mutable_user_list();
  const ::google::protobuf::RepeatedPtrField< ::Czhtdev::UserList >&
      user_list() const;

  // optional .Czhtdev.PassageRecord passge_record = 7;
  bool has_passge_record() const;
  void clear_passge_record();
  static const int kPassgeRecordFieldNumber = 7;
  const ::Czhtdev::PassageRecord& passge_record() const;
  ::Czhtdev::PassageRecord* mutable_passge_record();
  ::Czhtdev::PassageRecord* release_passge_record();
  void set_allocated_passge_record(::Czhtdev::PassageRecord* passge_record);

  // repeated .Czhtdev.PassageRecordList passge_record_list = 8;
  int passge_record_list_size() const;
  void clear_passge_record_list();
  static const int kPassgeRecordListFieldNumber = 8;
  const ::Czhtdev::PassageRecordList& passge_record_list(int index) const;
  ::Czhtdev::PassageRecordList* mutable_passge_record_list(int index);
  ::Czhtdev::PassageRecordList* add_passge_record_list();
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::PassageRecordList >*
      mutable_passge_record_list();
  const ::google::protobuf::RepeatedPtrField< ::Czhtdev::PassageRecordList >&
      passge_record_list() const;

  // optional .Czhtdev.PassageRecord passge_synchronous = 9;
  bool has_passge_synchronous() const;
  void clear_passge_synchronous();
  static const int kPassgeSynchronousFieldNumber = 9;
  const ::Czhtdev::PassageRecord& passge_synchronous() const;
  ::Czhtdev::PassageRecord* mutable_passge_synchronous();
  ::Czhtdev::PassageRecord* release_passge_synchronous();
  void set_allocated_passge_synchronous(::Czhtdev::PassageRecord* passge_synchronous);

  // optional .Czhtdev.DevConfig cfg = 10;
  bool has_cfg() const;
  void clear_cfg();
  static const int kCfgFieldNumber = 10;
  const ::Czhtdev::DevConfig& cfg() const;
  ::Czhtdev::DevConfig* mutable_cfg();
  ::Czhtdev::DevConfig* release_cfg();
  void set_allocated_cfg(::Czhtdev::DevConfig* cfg);

  // optional .Czhtdev.DeviceInfo devinfo = 11;
  bool has_devinfo() const;
  void clear_devinfo();
  static const int kDevinfoFieldNumber = 11;
  const ::Czhtdev::DeviceInfo& devinfo() const;
  ::Czhtdev::DeviceInfo* mutable_devinfo();
  ::Czhtdev::DeviceInfo* release_devinfo();
  void set_allocated_devinfo(::Czhtdev::DeviceInfo* devinfo);

  // repeated .Czhtdev.IDCard card_list = 13;
  int card_list_size() const;
  void clear_card_list();
  static const int kCardListFieldNumber = 13;
  const ::Czhtdev::IDCard& card_list(int index) const;
  ::Czhtdev::IDCard* mutable_card_list(int index);
  ::Czhtdev::IDCard* add_card_list();
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::IDCard >*
      mutable_card_list();
  const ::google::protobuf::RepeatedPtrField< ::Czhtdev::IDCard >&
      card_list() const;

  // repeated .Czhtdev.IPTable ip_list = 14;
  int ip_list_size() const;
  void clear_ip_list();
  static const int kIpListFieldNumber = 14;
  const ::Czhtdev::IPTable& ip_list(int index) const;
  ::Czhtdev::IPTable* mutable_ip_list(int index);
  ::Czhtdev::IPTable* add_ip_list();
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::IPTable >*
      mutable_ip_list();
  const ::google::protobuf::RepeatedPtrField< ::Czhtdev::IPTable >&
      ip_list() const;

  // @@protoc_insertion_point(class_scope:Czhtdev.Response)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_error_description();
  inline void clear_has_error_description();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_passge_record();
  inline void clear_has_passge_record();
  inline void set_has_passge_synchronous();
  inline void clear_has_passge_synchronous();
  inline void set_has_cfg();
  inline void clear_has_cfg();
  inline void set_has_devinfo();
  inline void clear_has_devinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::UserList > user_list_;
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::PassageRecordList > passge_record_list_;
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::IDCard > card_list_;
  ::google::protobuf::RepeatedPtrField< ::Czhtdev::IPTable > ip_list_;
  ::google::protobuf::internal::ArenaStringPtr error_description_;
  ::Czhtdev::User* user_;
  ::Czhtdev::PassageRecord* passge_record_;
  ::Czhtdev::PassageRecord* passge_synchronous_;
  ::Czhtdev::DevConfig* cfg_;
  ::Czhtdev::DeviceInfo* devinfo_;
  bool result_;
  int error_code_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Response> Response_default_instance_;

// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Czhtdev.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static const Message* internal_default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Message* other);
  void UnsafeMergeFrom(const Message& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Czhtdev.MessageType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::Czhtdev::MessageType type() const;
  void set_type(::Czhtdev::MessageType value);

  // optional .Czhtdev.Request request = 2;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 2;
  const ::Czhtdev::Request& request() const;
  ::Czhtdev::Request* mutable_request();
  ::Czhtdev::Request* release_request();
  void set_allocated_request(::Czhtdev::Request* request);

  // optional .Czhtdev.Response response = 3;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 3;
  const ::Czhtdev::Response& response() const;
  ::Czhtdev::Response* mutable_response();
  ::Czhtdev::Response* release_response();
  void set_allocated_response(::Czhtdev::Response* response);

  // @@protoc_insertion_point(class_scope:Czhtdev.Message)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Czhtdev::Request* request_;
  ::Czhtdev::Response* response_;
  int type_;
  friend void  protobuf_InitDefaults_czhtdev_2eproto_impl();
  friend void  protobuf_AddDesc_czhtdev_2eproto_impl();
  friend void protobuf_AssignDesc_czhtdev_2eproto();
  friend void protobuf_ShutdownFile_czhtdev_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Message> Message_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceInfo

// optional string device_id = 1;
inline bool DeviceInfo::has_device_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceInfo::set_has_device_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceInfo::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceInfo::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_id();
}
inline const ::std::string& DeviceInfo::device_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.DeviceInfo.device_id)
  return device_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceInfo::set_device_id(const ::std::string& value) {
  set_has_device_id();
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.DeviceInfo.device_id)
}
inline void DeviceInfo::set_device_id(const char* value) {
  set_has_device_id();
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.DeviceInfo.device_id)
}
inline void DeviceInfo::set_device_id(const char* value, size_t size) {
  set_has_device_id();
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.DeviceInfo.device_id)
}
inline ::std::string* DeviceInfo::mutable_device_id() {
  set_has_device_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.DeviceInfo.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceInfo::release_device_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.DeviceInfo.device_id)
  clear_has_device_id();
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceInfo::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    set_has_device_id();
  } else {
    clear_has_device_id();
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.DeviceInfo.device_id)
}

// optional string device_name = 2;
inline bool DeviceInfo::has_device_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceInfo::set_has_device_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeviceInfo::clear_has_device_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeviceInfo::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_name();
}
inline const ::std::string& DeviceInfo::device_name() const {
  // @@protoc_insertion_point(field_get:Czhtdev.DeviceInfo.device_name)
  return device_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceInfo::set_device_name(const ::std::string& value) {
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.DeviceInfo.device_name)
}
inline void DeviceInfo::set_device_name(const char* value) {
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.DeviceInfo.device_name)
}
inline void DeviceInfo::set_device_name(const char* value, size_t size) {
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.DeviceInfo.device_name)
}
inline ::std::string* DeviceInfo::mutable_device_name() {
  set_has_device_name();
  // @@protoc_insertion_point(field_mutable:Czhtdev.DeviceInfo.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceInfo::release_device_name() {
  // @@protoc_insertion_point(field_release:Czhtdev.DeviceInfo.device_name)
  clear_has_device_name();
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceInfo::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    set_has_device_name();
  } else {
    clear_has_device_name();
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.DeviceInfo.device_name)
}

// optional int32 device_type = 3;
inline bool DeviceInfo::has_device_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeviceInfo::set_has_device_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeviceInfo::clear_has_device_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeviceInfo::clear_device_type() {
  device_type_ = 0;
  clear_has_device_type();
}
inline ::google::protobuf::int32 DeviceInfo::device_type() const {
  // @@protoc_insertion_point(field_get:Czhtdev.DeviceInfo.device_type)
  return device_type_;
}
inline void DeviceInfo::set_device_type(::google::protobuf::int32 value) {
  set_has_device_type();
  device_type_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.DeviceInfo.device_type)
}

// optional string device_version = 4;
inline bool DeviceInfo::has_device_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeviceInfo::set_has_device_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeviceInfo::clear_has_device_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeviceInfo::clear_device_version() {
  device_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_version();
}
inline const ::std::string& DeviceInfo::device_version() const {
  // @@protoc_insertion_point(field_get:Czhtdev.DeviceInfo.device_version)
  return device_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceInfo::set_device_version(const ::std::string& value) {
  set_has_device_version();
  device_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.DeviceInfo.device_version)
}
inline void DeviceInfo::set_device_version(const char* value) {
  set_has_device_version();
  device_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.DeviceInfo.device_version)
}
inline void DeviceInfo::set_device_version(const char* value, size_t size) {
  set_has_device_version();
  device_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.DeviceInfo.device_version)
}
inline ::std::string* DeviceInfo::mutable_device_version() {
  set_has_device_version();
  // @@protoc_insertion_point(field_mutable:Czhtdev.DeviceInfo.device_version)
  return device_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceInfo::release_device_version() {
  // @@protoc_insertion_point(field_release:Czhtdev.DeviceInfo.device_version)
  clear_has_device_version();
  return device_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceInfo::set_allocated_device_version(::std::string* device_version) {
  if (device_version != NULL) {
    set_has_device_version();
  } else {
    clear_has_device_version();
  }
  device_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_version);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.DeviceInfo.device_version)
}

// optional string device_android_id = 5;
inline bool DeviceInfo::has_device_android_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DeviceInfo::set_has_device_android_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DeviceInfo::clear_has_device_android_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DeviceInfo::clear_device_android_id() {
  device_android_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_android_id();
}
inline const ::std::string& DeviceInfo::device_android_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.DeviceInfo.device_android_id)
  return device_android_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceInfo::set_device_android_id(const ::std::string& value) {
  set_has_device_android_id();
  device_android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.DeviceInfo.device_android_id)
}
inline void DeviceInfo::set_device_android_id(const char* value) {
  set_has_device_android_id();
  device_android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.DeviceInfo.device_android_id)
}
inline void DeviceInfo::set_device_android_id(const char* value, size_t size) {
  set_has_device_android_id();
  device_android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.DeviceInfo.device_android_id)
}
inline ::std::string* DeviceInfo::mutable_device_android_id() {
  set_has_device_android_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.DeviceInfo.device_android_id)
  return device_android_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceInfo::release_device_android_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.DeviceInfo.device_android_id)
  clear_has_device_android_id();
  return device_android_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceInfo::set_allocated_device_android_id(::std::string* device_android_id) {
  if (device_android_id != NULL) {
    set_has_device_android_id();
  } else {
    clear_has_device_android_id();
  }
  device_android_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_android_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.DeviceInfo.device_android_id)
}

inline const DeviceInfo* DeviceInfo::internal_default_instance() {
  return &DeviceInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// DevConfig

// repeated .Czhtdev.ConfigDescribe config = 1;
inline int DevConfig::config_size() const {
  return config_.size();
}
inline void DevConfig::clear_config() {
  config_.Clear();
}
inline const ::Czhtdev::ConfigDescribe& DevConfig::config(int index) const {
  // @@protoc_insertion_point(field_get:Czhtdev.DevConfig.config)
  return config_.Get(index);
}
inline ::Czhtdev::ConfigDescribe* DevConfig::mutable_config(int index) {
  // @@protoc_insertion_point(field_mutable:Czhtdev.DevConfig.config)
  return config_.Mutable(index);
}
inline ::Czhtdev::ConfigDescribe* DevConfig::add_config() {
  // @@protoc_insertion_point(field_add:Czhtdev.DevConfig.config)
  return config_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Czhtdev::ConfigDescribe >*
DevConfig::mutable_config() {
  // @@protoc_insertion_point(field_mutable_list:Czhtdev.DevConfig.config)
  return &config_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Czhtdev::ConfigDescribe >&
DevConfig::config() const {
  // @@protoc_insertion_point(field_list:Czhtdev.DevConfig.config)
  return config_;
}

inline const DevConfig* DevConfig::internal_default_instance() {
  return &DevConfig_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryConfig

// optional string save = 1;
inline bool QueryConfig::has_save() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryConfig::set_has_save() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryConfig::clear_has_save() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryConfig::clear_save() {
  save_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_save();
}
inline const ::std::string& QueryConfig::save() const {
  // @@protoc_insertion_point(field_get:Czhtdev.QueryConfig.save)
  return save_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryConfig::set_save(const ::std::string& value) {
  set_has_save();
  save_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.QueryConfig.save)
}
inline void QueryConfig::set_save(const char* value) {
  set_has_save();
  save_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.QueryConfig.save)
}
inline void QueryConfig::set_save(const char* value, size_t size) {
  set_has_save();
  save_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.QueryConfig.save)
}
inline ::std::string* QueryConfig::mutable_save() {
  set_has_save();
  // @@protoc_insertion_point(field_mutable:Czhtdev.QueryConfig.save)
  return save_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryConfig::release_save() {
  // @@protoc_insertion_point(field_release:Czhtdev.QueryConfig.save)
  clear_has_save();
  return save_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryConfig::set_allocated_save(::std::string* save) {
  if (save != NULL) {
    set_has_save();
  } else {
    clear_has_save();
  }
  save_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.QueryConfig.save)
}

inline const QueryConfig* QueryConfig::internal_default_instance() {
  return &QueryConfig_default_instance_.get();
}
// -------------------------------------------------------------------

// ModifyConfig

// optional string save = 1;
inline bool ModifyConfig::has_save() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyConfig::set_has_save() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyConfig::clear_has_save() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyConfig::clear_save() {
  save_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_save();
}
inline const ::std::string& ModifyConfig::save() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ModifyConfig.save)
  return save_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyConfig::set_save(const ::std::string& value) {
  set_has_save();
  save_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.ModifyConfig.save)
}
inline void ModifyConfig::set_save(const char* value) {
  set_has_save();
  save_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.ModifyConfig.save)
}
inline void ModifyConfig::set_save(const char* value, size_t size) {
  set_has_save();
  save_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.ModifyConfig.save)
}
inline ::std::string* ModifyConfig::mutable_save() {
  set_has_save();
  // @@protoc_insertion_point(field_mutable:Czhtdev.ModifyConfig.save)
  return save_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyConfig::release_save() {
  // @@protoc_insertion_point(field_release:Czhtdev.ModifyConfig.save)
  clear_has_save();
  return save_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyConfig::set_allocated_save(::std::string* save) {
  if (save != NULL) {
    set_has_save();
  } else {
    clear_has_save();
  }
  save_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.ModifyConfig.save)
}

// repeated .Czhtdev.ConfigPartDescribe config = 2;
inline int ModifyConfig::config_size() const {
  return config_.size();
}
inline void ModifyConfig::clear_config() {
  config_.Clear();
}
inline const ::Czhtdev::ConfigPartDescribe& ModifyConfig::config(int index) const {
  // @@protoc_insertion_point(field_get:Czhtdev.ModifyConfig.config)
  return config_.Get(index);
}
inline ::Czhtdev::ConfigPartDescribe* ModifyConfig::mutable_config(int index) {
  // @@protoc_insertion_point(field_mutable:Czhtdev.ModifyConfig.config)
  return config_.Mutable(index);
}
inline ::Czhtdev::ConfigPartDescribe* ModifyConfig::add_config() {
  // @@protoc_insertion_point(field_add:Czhtdev.ModifyConfig.config)
  return config_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Czhtdev::ConfigPartDescribe >*
ModifyConfig::mutable_config() {
  // @@protoc_insertion_point(field_mutable_list:Czhtdev.ModifyConfig.config)
  return &config_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Czhtdev::ConfigPartDescribe >&
ModifyConfig::config() const {
  // @@protoc_insertion_point(field_list:Czhtdev.ModifyConfig.config)
  return config_;
}

inline const ModifyConfig* ModifyConfig::internal_default_instance() {
  return &ModifyConfig_default_instance_.get();
}
// -------------------------------------------------------------------

// ConfigDescribe

// required string emnu = 1;
inline bool ConfigDescribe::has_emnu() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigDescribe::set_has_emnu() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigDescribe::clear_has_emnu() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigDescribe::clear_emnu() {
  emnu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emnu();
}
inline const ::std::string& ConfigDescribe::emnu() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ConfigDescribe.emnu)
  return emnu_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigDescribe::set_emnu(const ::std::string& value) {
  set_has_emnu();
  emnu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.ConfigDescribe.emnu)
}
inline void ConfigDescribe::set_emnu(const char* value) {
  set_has_emnu();
  emnu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.ConfigDescribe.emnu)
}
inline void ConfigDescribe::set_emnu(const char* value, size_t size) {
  set_has_emnu();
  emnu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.ConfigDescribe.emnu)
}
inline ::std::string* ConfigDescribe::mutable_emnu() {
  set_has_emnu();
  // @@protoc_insertion_point(field_mutable:Czhtdev.ConfigDescribe.emnu)
  return emnu_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigDescribe::release_emnu() {
  // @@protoc_insertion_point(field_release:Czhtdev.ConfigDescribe.emnu)
  clear_has_emnu();
  return emnu_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigDescribe::set_allocated_emnu(::std::string* emnu) {
  if (emnu != NULL) {
    set_has_emnu();
  } else {
    clear_has_emnu();
  }
  emnu_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emnu);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.ConfigDescribe.emnu)
}

// required string msg = 2;
inline bool ConfigDescribe::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigDescribe::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigDescribe::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigDescribe::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& ConfigDescribe::msg() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ConfigDescribe.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigDescribe::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.ConfigDescribe.msg)
}
inline void ConfigDescribe::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.ConfigDescribe.msg)
}
inline void ConfigDescribe::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.ConfigDescribe.msg)
}
inline ::std::string* ConfigDescribe::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:Czhtdev.ConfigDescribe.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigDescribe::release_msg() {
  // @@protoc_insertion_point(field_release:Czhtdev.ConfigDescribe.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigDescribe::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.ConfigDescribe.msg)
}

// required int32 mask1 = 3;
inline bool ConfigDescribe::has_mask1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigDescribe::set_has_mask1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigDescribe::clear_has_mask1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigDescribe::clear_mask1() {
  mask1_ = 0;
  clear_has_mask1();
}
inline ::google::protobuf::int32 ConfigDescribe::mask1() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ConfigDescribe.mask1)
  return mask1_;
}
inline void ConfigDescribe::set_mask1(::google::protobuf::int32 value) {
  set_has_mask1();
  mask1_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.ConfigDescribe.mask1)
}

// required int32 mask2 = 4;
inline bool ConfigDescribe::has_mask2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigDescribe::set_has_mask2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigDescribe::clear_has_mask2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigDescribe::clear_mask2() {
  mask2_ = 0;
  clear_has_mask2();
}
inline ::google::protobuf::int32 ConfigDescribe::mask2() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ConfigDescribe.mask2)
  return mask2_;
}
inline void ConfigDescribe::set_mask2(::google::protobuf::int32 value) {
  set_has_mask2();
  mask2_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.ConfigDescribe.mask2)
}

// required string cfg = 5;
inline bool ConfigDescribe::has_cfg() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigDescribe::set_has_cfg() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigDescribe::clear_has_cfg() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigDescribe::clear_cfg() {
  cfg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cfg();
}
inline const ::std::string& ConfigDescribe::cfg() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ConfigDescribe.cfg)
  return cfg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigDescribe::set_cfg(const ::std::string& value) {
  set_has_cfg();
  cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.ConfigDescribe.cfg)
}
inline void ConfigDescribe::set_cfg(const char* value) {
  set_has_cfg();
  cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.ConfigDescribe.cfg)
}
inline void ConfigDescribe::set_cfg(const char* value, size_t size) {
  set_has_cfg();
  cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.ConfigDescribe.cfg)
}
inline ::std::string* ConfigDescribe::mutable_cfg() {
  set_has_cfg();
  // @@protoc_insertion_point(field_mutable:Czhtdev.ConfigDescribe.cfg)
  return cfg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigDescribe::release_cfg() {
  // @@protoc_insertion_point(field_release:Czhtdev.ConfigDescribe.cfg)
  clear_has_cfg();
  return cfg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigDescribe::set_allocated_cfg(::std::string* cfg) {
  if (cfg != NULL) {
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  cfg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfg);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.ConfigDescribe.cfg)
}

// required string scope = 6;
inline bool ConfigDescribe::has_scope() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigDescribe::set_has_scope() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigDescribe::clear_has_scope() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigDescribe::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scope();
}
inline const ::std::string& ConfigDescribe::scope() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ConfigDescribe.scope)
  return scope_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigDescribe::set_scope(const ::std::string& value) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.ConfigDescribe.scope)
}
inline void ConfigDescribe::set_scope(const char* value) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.ConfigDescribe.scope)
}
inline void ConfigDescribe::set_scope(const char* value, size_t size) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.ConfigDescribe.scope)
}
inline ::std::string* ConfigDescribe::mutable_scope() {
  set_has_scope();
  // @@protoc_insertion_point(field_mutable:Czhtdev.ConfigDescribe.scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigDescribe::release_scope() {
  // @@protoc_insertion_point(field_release:Czhtdev.ConfigDescribe.scope)
  clear_has_scope();
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigDescribe::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    set_has_scope();
  } else {
    clear_has_scope();
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.ConfigDescribe.scope)
}

inline const ConfigDescribe* ConfigDescribe::internal_default_instance() {
  return &ConfigDescribe_default_instance_.get();
}
// -------------------------------------------------------------------

// ConfigPartDescribe

// required string emnu = 1;
inline bool ConfigPartDescribe::has_emnu() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigPartDescribe::set_has_emnu() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigPartDescribe::clear_has_emnu() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigPartDescribe::clear_emnu() {
  emnu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emnu();
}
inline const ::std::string& ConfigPartDescribe::emnu() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ConfigPartDescribe.emnu)
  return emnu_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigPartDescribe::set_emnu(const ::std::string& value) {
  set_has_emnu();
  emnu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.ConfigPartDescribe.emnu)
}
inline void ConfigPartDescribe::set_emnu(const char* value) {
  set_has_emnu();
  emnu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.ConfigPartDescribe.emnu)
}
inline void ConfigPartDescribe::set_emnu(const char* value, size_t size) {
  set_has_emnu();
  emnu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.ConfigPartDescribe.emnu)
}
inline ::std::string* ConfigPartDescribe::mutable_emnu() {
  set_has_emnu();
  // @@protoc_insertion_point(field_mutable:Czhtdev.ConfigPartDescribe.emnu)
  return emnu_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigPartDescribe::release_emnu() {
  // @@protoc_insertion_point(field_release:Czhtdev.ConfigPartDescribe.emnu)
  clear_has_emnu();
  return emnu_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigPartDescribe::set_allocated_emnu(::std::string* emnu) {
  if (emnu != NULL) {
    set_has_emnu();
  } else {
    clear_has_emnu();
  }
  emnu_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emnu);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.ConfigPartDescribe.emnu)
}

// required int32 mask2 = 2;
inline bool ConfigPartDescribe::has_mask2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigPartDescribe::set_has_mask2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigPartDescribe::clear_has_mask2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigPartDescribe::clear_mask2() {
  mask2_ = 0;
  clear_has_mask2();
}
inline ::google::protobuf::int32 ConfigPartDescribe::mask2() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ConfigPartDescribe.mask2)
  return mask2_;
}
inline void ConfigPartDescribe::set_mask2(::google::protobuf::int32 value) {
  set_has_mask2();
  mask2_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.ConfigPartDescribe.mask2)
}

// required string cfg = 3;
inline bool ConfigPartDescribe::has_cfg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigPartDescribe::set_has_cfg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigPartDescribe::clear_has_cfg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigPartDescribe::clear_cfg() {
  cfg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cfg();
}
inline const ::std::string& ConfigPartDescribe::cfg() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ConfigPartDescribe.cfg)
  return cfg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigPartDescribe::set_cfg(const ::std::string& value) {
  set_has_cfg();
  cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.ConfigPartDescribe.cfg)
}
inline void ConfigPartDescribe::set_cfg(const char* value) {
  set_has_cfg();
  cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.ConfigPartDescribe.cfg)
}
inline void ConfigPartDescribe::set_cfg(const char* value, size_t size) {
  set_has_cfg();
  cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.ConfigPartDescribe.cfg)
}
inline ::std::string* ConfigPartDescribe::mutable_cfg() {
  set_has_cfg();
  // @@protoc_insertion_point(field_mutable:Czhtdev.ConfigPartDescribe.cfg)
  return cfg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigPartDescribe::release_cfg() {
  // @@protoc_insertion_point(field_release:Czhtdev.ConfigPartDescribe.cfg)
  clear_has_cfg();
  return cfg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigPartDescribe::set_allocated_cfg(::std::string* cfg) {
  if (cfg != NULL) {
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  cfg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfg);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.ConfigPartDescribe.cfg)
}

// required string scope = 4;
inline bool ConfigPartDescribe::has_scope() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigPartDescribe::set_has_scope() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigPartDescribe::clear_has_scope() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigPartDescribe::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scope();
}
inline const ::std::string& ConfigPartDescribe::scope() const {
  // @@protoc_insertion_point(field_get:Czhtdev.ConfigPartDescribe.scope)
  return scope_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigPartDescribe::set_scope(const ::std::string& value) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.ConfigPartDescribe.scope)
}
inline void ConfigPartDescribe::set_scope(const char* value) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.ConfigPartDescribe.scope)
}
inline void ConfigPartDescribe::set_scope(const char* value, size_t size) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.ConfigPartDescribe.scope)
}
inline ::std::string* ConfigPartDescribe::mutable_scope() {
  set_has_scope();
  // @@protoc_insertion_point(field_mutable:Czhtdev.ConfigPartDescribe.scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigPartDescribe::release_scope() {
  // @@protoc_insertion_point(field_release:Czhtdev.ConfigPartDescribe.scope)
  clear_has_scope();
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigPartDescribe::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    set_has_scope();
  } else {
    clear_has_scope();
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.ConfigPartDescribe.scope)
}

inline const ConfigPartDescribe* ConfigPartDescribe::internal_default_instance() {
  return &ConfigPartDescribe_default_instance_.get();
}
// -------------------------------------------------------------------

// Week

// required bool week1 = 1;
inline bool Week::has_week1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Week::set_has_week1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Week::clear_has_week1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Week::clear_week1() {
  week1_ = false;
  clear_has_week1();
}
inline bool Week::week1() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Week.week1)
  return week1_;
}
inline void Week::set_week1(bool value) {
  set_has_week1();
  week1_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Week.week1)
}

// required bool week2 = 2;
inline bool Week::has_week2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Week::set_has_week2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Week::clear_has_week2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Week::clear_week2() {
  week2_ = false;
  clear_has_week2();
}
inline bool Week::week2() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Week.week2)
  return week2_;
}
inline void Week::set_week2(bool value) {
  set_has_week2();
  week2_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Week.week2)
}

// required bool week3 = 3;
inline bool Week::has_week3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Week::set_has_week3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Week::clear_has_week3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Week::clear_week3() {
  week3_ = false;
  clear_has_week3();
}
inline bool Week::week3() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Week.week3)
  return week3_;
}
inline void Week::set_week3(bool value) {
  set_has_week3();
  week3_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Week.week3)
}

// required bool week4 = 4;
inline bool Week::has_week4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Week::set_has_week4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Week::clear_has_week4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Week::clear_week4() {
  week4_ = false;
  clear_has_week4();
}
inline bool Week::week4() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Week.week4)
  return week4_;
}
inline void Week::set_week4(bool value) {
  set_has_week4();
  week4_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Week.week4)
}

// required bool week5 = 5;
inline bool Week::has_week5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Week::set_has_week5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Week::clear_has_week5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Week::clear_week5() {
  week5_ = false;
  clear_has_week5();
}
inline bool Week::week5() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Week.week5)
  return week5_;
}
inline void Week::set_week5(bool value) {
  set_has_week5();
  week5_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Week.week5)
}

// required bool week6 = 6;
inline bool Week::has_week6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Week::set_has_week6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Week::clear_has_week6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Week::clear_week6() {
  week6_ = false;
  clear_has_week6();
}
inline bool Week::week6() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Week.week6)
  return week6_;
}
inline void Week::set_week6(bool value) {
  set_has_week6();
  week6_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Week.week6)
}

// required bool week7 = 7;
inline bool Week::has_week7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Week::set_has_week7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Week::clear_has_week7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Week::clear_week7() {
  week7_ = false;
  clear_has_week7();
}
inline bool Week::week7() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Week.week7)
  return week7_;
}
inline void Week::set_week7(bool value) {
  set_has_week7();
  week7_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Week.week7)
}

inline const Week* Week::internal_default_instance() {
  return &Week_default_instance_.get();
}
// -------------------------------------------------------------------

// TimeAuth

// required uint64 start_date = 1;
inline bool TimeAuth::has_start_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeAuth::set_has_start_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeAuth::clear_has_start_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeAuth::clear_start_date() {
  start_date_ = GOOGLE_ULONGLONG(0);
  clear_has_start_date();
}
inline ::google::protobuf::uint64 TimeAuth::start_date() const {
  // @@protoc_insertion_point(field_get:Czhtdev.TimeAuth.start_date)
  return start_date_;
}
inline void TimeAuth::set_start_date(::google::protobuf::uint64 value) {
  set_has_start_date();
  start_date_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.TimeAuth.start_date)
}

// required uint64 end_date = 2;
inline bool TimeAuth::has_end_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeAuth::set_has_end_date() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeAuth::clear_has_end_date() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeAuth::clear_end_date() {
  end_date_ = GOOGLE_ULONGLONG(0);
  clear_has_end_date();
}
inline ::google::protobuf::uint64 TimeAuth::end_date() const {
  // @@protoc_insertion_point(field_get:Czhtdev.TimeAuth.end_date)
  return end_date_;
}
inline void TimeAuth::set_end_date(::google::protobuf::uint64 value) {
  set_has_end_date();
  end_date_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.TimeAuth.end_date)
}

// required int32 start_time = 3;
inline bool TimeAuth::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TimeAuth::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TimeAuth::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TimeAuth::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
inline ::google::protobuf::int32 TimeAuth::start_time() const {
  // @@protoc_insertion_point(field_get:Czhtdev.TimeAuth.start_time)
  return start_time_;
}
inline void TimeAuth::set_start_time(::google::protobuf::int32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.TimeAuth.start_time)
}

// required int32 end_time = 4;
inline bool TimeAuth::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TimeAuth::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TimeAuth::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TimeAuth::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
inline ::google::protobuf::int32 TimeAuth::end_time() const {
  // @@protoc_insertion_point(field_get:Czhtdev.TimeAuth.end_time)
  return end_time_;
}
inline void TimeAuth::set_end_time(::google::protobuf::int32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.TimeAuth.end_time)
}

// optional .Czhtdev.Week weekday = 5;
inline bool TimeAuth::has_weekday() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TimeAuth::set_has_weekday() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TimeAuth::clear_has_weekday() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TimeAuth::clear_weekday() {
  if (weekday_ != NULL) weekday_->::Czhtdev::Week::Clear();
  clear_has_weekday();
}
inline const ::Czhtdev::Week& TimeAuth::weekday() const {
  // @@protoc_insertion_point(field_get:Czhtdev.TimeAuth.weekday)
  return weekday_ != NULL ? *weekday_
                         : *::Czhtdev::Week::internal_default_instance();
}
inline ::Czhtdev::Week* TimeAuth::mutable_weekday() {
  set_has_weekday();
  if (weekday_ == NULL) {
    weekday_ = new ::Czhtdev::Week;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.TimeAuth.weekday)
  return weekday_;
}
inline ::Czhtdev::Week* TimeAuth::release_weekday() {
  // @@protoc_insertion_point(field_release:Czhtdev.TimeAuth.weekday)
  clear_has_weekday();
  ::Czhtdev::Week* temp = weekday_;
  weekday_ = NULL;
  return temp;
}
inline void TimeAuth::set_allocated_weekday(::Czhtdev::Week* weekday) {
  delete weekday_;
  weekday_ = weekday;
  if (weekday) {
    set_has_weekday();
  } else {
    clear_has_weekday();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.TimeAuth.weekday)
}

inline const TimeAuth* TimeAuth::internal_default_instance() {
  return &TimeAuth_default_instance_.get();
}
// -------------------------------------------------------------------

// UserPic

// required int32 user_pic_id = 1;
inline bool UserPic::has_user_pic_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserPic::set_has_user_pic_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserPic::clear_has_user_pic_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserPic::clear_user_pic_id() {
  user_pic_id_ = 0;
  clear_has_user_pic_id();
}
inline ::google::protobuf::int32 UserPic::user_pic_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserPic.user_pic_id)
  return user_pic_id_;
}
inline void UserPic::set_user_pic_id(::google::protobuf::int32 value) {
  set_has_user_pic_id();
  user_pic_id_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.UserPic.user_pic_id)
}

// required bytes face_data = 2;
inline bool UserPic::has_face_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserPic::set_has_face_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserPic::clear_has_face_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserPic::clear_face_data() {
  face_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_face_data();
}
inline const ::std::string& UserPic::face_data() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserPic.face_data)
  return face_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserPic::set_face_data(const ::std::string& value) {
  set_has_face_data();
  face_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.UserPic.face_data)
}
inline void UserPic::set_face_data(const char* value) {
  set_has_face_data();
  face_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.UserPic.face_data)
}
inline void UserPic::set_face_data(const void* value, size_t size) {
  set_has_face_data();
  face_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.UserPic.face_data)
}
inline ::std::string* UserPic::mutable_face_data() {
  set_has_face_data();
  // @@protoc_insertion_point(field_mutable:Czhtdev.UserPic.face_data)
  return face_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserPic::release_face_data() {
  // @@protoc_insertion_point(field_release:Czhtdev.UserPic.face_data)
  clear_has_face_data();
  return face_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserPic::set_allocated_face_data(::std::string* face_data) {
  if (face_data != NULL) {
    set_has_face_data();
  } else {
    clear_has_face_data();
  }
  face_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), face_data);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.UserPic.face_data)
}

inline const UserPic* UserPic::internal_default_instance() {
  return &UserPic_default_instance_.get();
}
// -------------------------------------------------------------------

// User

// required string user_id = 1;
inline bool User::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& User::user_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.User.user_id)
}
inline void User::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.User.user_id)
}
inline void User::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.User.user_id)
}
inline ::std::string* User::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.User.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_user_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.User.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.User.user_id)
}

// required string user_name = 2;
inline bool User::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void User::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void User::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void User::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& User::user_name() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.User.user_name)
}
inline void User::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.User.user_name)
}
inline void User::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.User.user_name)
}
inline ::std::string* User::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:Czhtdev.User.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_user_name() {
  // @@protoc_insertion_point(field_release:Czhtdev.User.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.User.user_name)
}

// required string sex = 3;
inline bool User::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void User::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void User::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void User::clear_sex() {
  sex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sex();
}
inline const ::std::string& User::sex() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.sex)
  return sex_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_sex(const ::std::string& value) {
  set_has_sex();
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.User.sex)
}
inline void User::set_sex(const char* value) {
  set_has_sex();
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.User.sex)
}
inline void User::set_sex(const char* value, size_t size) {
  set_has_sex();
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.User.sex)
}
inline ::std::string* User::mutable_sex() {
  set_has_sex();
  // @@protoc_insertion_point(field_mutable:Czhtdev.User.sex)
  return sex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_sex() {
  // @@protoc_insertion_point(field_release:Czhtdev.User.sex)
  clear_has_sex();
  return sex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_sex(::std::string* sex) {
  if (sex != NULL) {
    set_has_sex();
  } else {
    clear_has_sex();
  }
  sex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sex);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.User.sex)
}

// required bool user_areas = 4;
inline bool User::has_user_areas() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void User::set_has_user_areas() {
  _has_bits_[0] |= 0x00000008u;
}
inline void User::clear_has_user_areas() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void User::clear_user_areas() {
  user_areas_ = false;
  clear_has_user_areas();
}
inline bool User::user_areas() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.user_areas)
  return user_areas_;
}
inline void User::set_user_areas(bool value) {
  set_has_user_areas();
  user_areas_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.User.user_areas)
}

// repeated .Czhtdev.UserPic user_register_pics = 5;
inline int User::user_register_pics_size() const {
  return user_register_pics_.size();
}
inline void User::clear_user_register_pics() {
  user_register_pics_.Clear();
}
inline const ::Czhtdev::UserPic& User::user_register_pics(int index) const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.user_register_pics)
  return user_register_pics_.Get(index);
}
inline ::Czhtdev::UserPic* User::mutable_user_register_pics(int index) {
  // @@protoc_insertion_point(field_mutable:Czhtdev.User.user_register_pics)
  return user_register_pics_.Mutable(index);
}
inline ::Czhtdev::UserPic* User::add_user_register_pics() {
  // @@protoc_insertion_point(field_add:Czhtdev.User.user_register_pics)
  return user_register_pics_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Czhtdev::UserPic >*
User::mutable_user_register_pics() {
  // @@protoc_insertion_point(field_mutable_list:Czhtdev.User.user_register_pics)
  return &user_register_pics_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Czhtdev::UserPic >&
User::user_register_pics() const {
  // @@protoc_insertion_point(field_list:Czhtdev.User.user_register_pics)
  return user_register_pics_;
}

// optional int32 user_type = 6;
inline bool User::has_user_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void User::set_has_user_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void User::clear_has_user_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void User::clear_user_type() {
  user_type_ = 0;
  clear_has_user_type();
}
inline ::google::protobuf::int32 User::user_type() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.user_type)
  return user_type_;
}
inline void User::set_user_type(::google::protobuf::int32 value) {
  set_has_user_type();
  user_type_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.User.user_type)
}

// optional uint64 visit_starttime = 7;
inline bool User::has_visit_starttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void User::set_has_visit_starttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void User::clear_has_visit_starttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void User::clear_visit_starttime() {
  visit_starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_visit_starttime();
}
inline ::google::protobuf::uint64 User::visit_starttime() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.visit_starttime)
  return visit_starttime_;
}
inline void User::set_visit_starttime(::google::protobuf::uint64 value) {
  set_has_visit_starttime();
  visit_starttime_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.User.visit_starttime)
}

// optional uint64 visit_endtime = 8;
inline bool User::has_visit_endtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void User::set_has_visit_endtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void User::clear_has_visit_endtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void User::clear_visit_endtime() {
  visit_endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_visit_endtime();
}
inline ::google::protobuf::uint64 User::visit_endtime() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.visit_endtime)
  return visit_endtime_;
}
inline void User::set_visit_endtime(::google::protobuf::uint64 value) {
  set_has_visit_endtime();
  visit_endtime_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.User.visit_endtime)
}

// optional .Czhtdev.TimeAuth user_time_auth = 9;
inline bool User::has_user_time_auth() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void User::set_has_user_time_auth() {
  _has_bits_[0] |= 0x00000100u;
}
inline void User::clear_has_user_time_auth() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void User::clear_user_time_auth() {
  if (user_time_auth_ != NULL) user_time_auth_->::Czhtdev::TimeAuth::Clear();
  clear_has_user_time_auth();
}
inline const ::Czhtdev::TimeAuth& User::user_time_auth() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.user_time_auth)
  return user_time_auth_ != NULL ? *user_time_auth_
                         : *::Czhtdev::TimeAuth::internal_default_instance();
}
inline ::Czhtdev::TimeAuth* User::mutable_user_time_auth() {
  set_has_user_time_auth();
  if (user_time_auth_ == NULL) {
    user_time_auth_ = new ::Czhtdev::TimeAuth;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.User.user_time_auth)
  return user_time_auth_;
}
inline ::Czhtdev::TimeAuth* User::release_user_time_auth() {
  // @@protoc_insertion_point(field_release:Czhtdev.User.user_time_auth)
  clear_has_user_time_auth();
  ::Czhtdev::TimeAuth* temp = user_time_auth_;
  user_time_auth_ = NULL;
  return temp;
}
inline void User::set_allocated_user_time_auth(::Czhtdev::TimeAuth* user_time_auth) {
  delete user_time_auth_;
  user_time_auth_ = user_time_auth;
  if (user_time_auth) {
    set_has_user_time_auth();
  } else {
    clear_has_user_time_auth();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.User.user_time_auth)
}

// optional bytes fingerprint_data = 10;
inline bool User::has_fingerprint_data() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void User::set_has_fingerprint_data() {
  _has_bits_[0] |= 0x00000200u;
}
inline void User::clear_has_fingerprint_data() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void User::clear_fingerprint_data() {
  fingerprint_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fingerprint_data();
}
inline const ::std::string& User::fingerprint_data() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.fingerprint_data)
  return fingerprint_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_fingerprint_data(const ::std::string& value) {
  set_has_fingerprint_data();
  fingerprint_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.User.fingerprint_data)
}
inline void User::set_fingerprint_data(const char* value) {
  set_has_fingerprint_data();
  fingerprint_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.User.fingerprint_data)
}
inline void User::set_fingerprint_data(const void* value, size_t size) {
  set_has_fingerprint_data();
  fingerprint_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.User.fingerprint_data)
}
inline ::std::string* User::mutable_fingerprint_data() {
  set_has_fingerprint_data();
  // @@protoc_insertion_point(field_mutable:Czhtdev.User.fingerprint_data)
  return fingerprint_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_fingerprint_data() {
  // @@protoc_insertion_point(field_release:Czhtdev.User.fingerprint_data)
  clear_has_fingerprint_data();
  return fingerprint_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_fingerprint_data(::std::string* fingerprint_data) {
  if (fingerprint_data != NULL) {
    set_has_fingerprint_data();
  } else {
    clear_has_fingerprint_data();
  }
  fingerprint_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fingerprint_data);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.User.fingerprint_data)
}

// optional string company_id = 11;
inline bool User::has_company_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void User::set_has_company_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void User::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void User::clear_company_id() {
  company_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_company_id();
}
inline const ::std::string& User::company_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.company_id)
  return company_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_company_id(const ::std::string& value) {
  set_has_company_id();
  company_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.User.company_id)
}
inline void User::set_company_id(const char* value) {
  set_has_company_id();
  company_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.User.company_id)
}
inline void User::set_company_id(const char* value, size_t size) {
  set_has_company_id();
  company_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.User.company_id)
}
inline ::std::string* User::mutable_company_id() {
  set_has_company_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.User.company_id)
  return company_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_company_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.User.company_id)
  clear_has_company_id();
  return company_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_company_id(::std::string* company_id) {
  if (company_id != NULL) {
    set_has_company_id();
  } else {
    clear_has_company_id();
  }
  company_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.User.company_id)
}

// optional string card = 12;
inline bool User::has_card() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void User::set_has_card() {
  _has_bits_[0] |= 0x00000800u;
}
inline void User::clear_has_card() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void User::clear_card() {
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card();
}
inline const ::std::string& User::card() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.card)
  return card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_card(const ::std::string& value) {
  set_has_card();
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.User.card)
}
inline void User::set_card(const char* value) {
  set_has_card();
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.User.card)
}
inline void User::set_card(const char* value, size_t size) {
  set_has_card();
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.User.card)
}
inline ::std::string* User::mutable_card() {
  set_has_card();
  // @@protoc_insertion_point(field_mutable:Czhtdev.User.card)
  return card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_card() {
  // @@protoc_insertion_point(field_release:Czhtdev.User.card)
  clear_has_card();
  return card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_card(::std::string* card) {
  if (card != NULL) {
    set_has_card();
  } else {
    clear_has_card();
  }
  card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.User.card)
}

// optional string id_card = 13;
inline bool User::has_id_card() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void User::set_has_id_card() {
  _has_bits_[0] |= 0x00001000u;
}
inline void User::clear_has_id_card() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void User::clear_id_card() {
  id_card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id_card();
}
inline const ::std::string& User::id_card() const {
  // @@protoc_insertion_point(field_get:Czhtdev.User.id_card)
  return id_card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_id_card(const ::std::string& value) {
  set_has_id_card();
  id_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.User.id_card)
}
inline void User::set_id_card(const char* value) {
  set_has_id_card();
  id_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.User.id_card)
}
inline void User::set_id_card(const char* value, size_t size) {
  set_has_id_card();
  id_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.User.id_card)
}
inline ::std::string* User::mutable_id_card() {
  set_has_id_card();
  // @@protoc_insertion_point(field_mutable:Czhtdev.User.id_card)
  return id_card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_id_card() {
  // @@protoc_insertion_point(field_release:Czhtdev.User.id_card)
  clear_has_id_card();
  return id_card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_id_card(::std::string* id_card) {
  if (id_card != NULL) {
    set_has_id_card();
  } else {
    clear_has_id_card();
  }
  id_card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id_card);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.User.id_card)
}

inline const User* User::internal_default_instance() {
  return &User_default_instance_.get();
}
// -------------------------------------------------------------------

// UserList

// required string user_id = 1;
inline bool UserList::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserList::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserList::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserList::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& UserList::user_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.user_id)
}
inline void UserList::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.UserList.user_id)
}
inline void UserList::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.UserList.user_id)
}
inline ::std::string* UserList::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.UserList.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserList::release_user_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.UserList.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.UserList.user_id)
}

// required string user_name = 2;
inline bool UserList::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserList::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserList::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserList::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& UserList::user_name() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.user_name)
}
inline void UserList::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.UserList.user_name)
}
inline void UserList::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.UserList.user_name)
}
inline ::std::string* UserList::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:Czhtdev.UserList.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserList::release_user_name() {
  // @@protoc_insertion_point(field_release:Czhtdev.UserList.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.UserList.user_name)
}

// required string sex = 3;
inline bool UserList::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserList::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserList::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserList::clear_sex() {
  sex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sex();
}
inline const ::std::string& UserList::sex() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.sex)
  return sex_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_sex(const ::std::string& value) {
  set_has_sex();
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.sex)
}
inline void UserList::set_sex(const char* value) {
  set_has_sex();
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.UserList.sex)
}
inline void UserList::set_sex(const char* value, size_t size) {
  set_has_sex();
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.UserList.sex)
}
inline ::std::string* UserList::mutable_sex() {
  set_has_sex();
  // @@protoc_insertion_point(field_mutable:Czhtdev.UserList.sex)
  return sex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserList::release_sex() {
  // @@protoc_insertion_point(field_release:Czhtdev.UserList.sex)
  clear_has_sex();
  return sex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_allocated_sex(::std::string* sex) {
  if (sex != NULL) {
    set_has_sex();
  } else {
    clear_has_sex();
  }
  sex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sex);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.UserList.sex)
}

// required bool user_areas = 4;
inline bool UserList::has_user_areas() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserList::set_has_user_areas() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserList::clear_has_user_areas() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserList::clear_user_areas() {
  user_areas_ = false;
  clear_has_user_areas();
}
inline bool UserList::user_areas() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.user_areas)
  return user_areas_;
}
inline void UserList::set_user_areas(bool value) {
  set_has_user_areas();
  user_areas_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.user_areas)
}

// repeated int32 pics_id = 5;
inline int UserList::pics_id_size() const {
  return pics_id_.size();
}
inline void UserList::clear_pics_id() {
  pics_id_.Clear();
}
inline ::google::protobuf::int32 UserList::pics_id(int index) const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.pics_id)
  return pics_id_.Get(index);
}
inline void UserList::set_pics_id(int index, ::google::protobuf::int32 value) {
  pics_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.pics_id)
}
inline void UserList::add_pics_id(::google::protobuf::int32 value) {
  pics_id_.Add(value);
  // @@protoc_insertion_point(field_add:Czhtdev.UserList.pics_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UserList::pics_id() const {
  // @@protoc_insertion_point(field_list:Czhtdev.UserList.pics_id)
  return pics_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UserList::mutable_pics_id() {
  // @@protoc_insertion_point(field_mutable_list:Czhtdev.UserList.pics_id)
  return &pics_id_;
}

// optional int32 user_type = 6;
inline bool UserList::has_user_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserList::set_has_user_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserList::clear_has_user_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserList::clear_user_type() {
  user_type_ = 0;
  clear_has_user_type();
}
inline ::google::protobuf::int32 UserList::user_type() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.user_type)
  return user_type_;
}
inline void UserList::set_user_type(::google::protobuf::int32 value) {
  set_has_user_type();
  user_type_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.user_type)
}

// optional uint64 visit_starttime = 7;
inline bool UserList::has_visit_starttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserList::set_has_visit_starttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserList::clear_has_visit_starttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserList::clear_visit_starttime() {
  visit_starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_visit_starttime();
}
inline ::google::protobuf::uint64 UserList::visit_starttime() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.visit_starttime)
  return visit_starttime_;
}
inline void UserList::set_visit_starttime(::google::protobuf::uint64 value) {
  set_has_visit_starttime();
  visit_starttime_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.visit_starttime)
}

// optional uint64 visit_endtime = 8;
inline bool UserList::has_visit_endtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserList::set_has_visit_endtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserList::clear_has_visit_endtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserList::clear_visit_endtime() {
  visit_endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_visit_endtime();
}
inline ::google::protobuf::uint64 UserList::visit_endtime() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.visit_endtime)
  return visit_endtime_;
}
inline void UserList::set_visit_endtime(::google::protobuf::uint64 value) {
  set_has_visit_endtime();
  visit_endtime_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.visit_endtime)
}

// optional .Czhtdev.TimeAuth user_time_auth = 9;
inline bool UserList::has_user_time_auth() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserList::set_has_user_time_auth() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserList::clear_has_user_time_auth() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserList::clear_user_time_auth() {
  if (user_time_auth_ != NULL) user_time_auth_->::Czhtdev::TimeAuth::Clear();
  clear_has_user_time_auth();
}
inline const ::Czhtdev::TimeAuth& UserList::user_time_auth() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.user_time_auth)
  return user_time_auth_ != NULL ? *user_time_auth_
                         : *::Czhtdev::TimeAuth::internal_default_instance();
}
inline ::Czhtdev::TimeAuth* UserList::mutable_user_time_auth() {
  set_has_user_time_auth();
  if (user_time_auth_ == NULL) {
    user_time_auth_ = new ::Czhtdev::TimeAuth;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.UserList.user_time_auth)
  return user_time_auth_;
}
inline ::Czhtdev::TimeAuth* UserList::release_user_time_auth() {
  // @@protoc_insertion_point(field_release:Czhtdev.UserList.user_time_auth)
  clear_has_user_time_auth();
  ::Czhtdev::TimeAuth* temp = user_time_auth_;
  user_time_auth_ = NULL;
  return temp;
}
inline void UserList::set_allocated_user_time_auth(::Czhtdev::TimeAuth* user_time_auth) {
  delete user_time_auth_;
  user_time_auth_ = user_time_auth;
  if (user_time_auth) {
    set_has_user_time_auth();
  } else {
    clear_has_user_time_auth();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.UserList.user_time_auth)
}

// optional string company_id = 10;
inline bool UserList::has_company_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserList::set_has_company_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserList::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserList::clear_company_id() {
  company_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_company_id();
}
inline const ::std::string& UserList::company_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.company_id)
  return company_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_company_id(const ::std::string& value) {
  set_has_company_id();
  company_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.company_id)
}
inline void UserList::set_company_id(const char* value) {
  set_has_company_id();
  company_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.UserList.company_id)
}
inline void UserList::set_company_id(const char* value, size_t size) {
  set_has_company_id();
  company_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.UserList.company_id)
}
inline ::std::string* UserList::mutable_company_id() {
  set_has_company_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.UserList.company_id)
  return company_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserList::release_company_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.UserList.company_id)
  clear_has_company_id();
  return company_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_allocated_company_id(::std::string* company_id) {
  if (company_id != NULL) {
    set_has_company_id();
  } else {
    clear_has_company_id();
  }
  company_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.UserList.company_id)
}

// optional string card = 11;
inline bool UserList::has_card() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserList::set_has_card() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserList::clear_has_card() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserList::clear_card() {
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card();
}
inline const ::std::string& UserList::card() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.card)
  return card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_card(const ::std::string& value) {
  set_has_card();
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.card)
}
inline void UserList::set_card(const char* value) {
  set_has_card();
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.UserList.card)
}
inline void UserList::set_card(const char* value, size_t size) {
  set_has_card();
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.UserList.card)
}
inline ::std::string* UserList::mutable_card() {
  set_has_card();
  // @@protoc_insertion_point(field_mutable:Czhtdev.UserList.card)
  return card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserList::release_card() {
  // @@protoc_insertion_point(field_release:Czhtdev.UserList.card)
  clear_has_card();
  return card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_allocated_card(::std::string* card) {
  if (card != NULL) {
    set_has_card();
  } else {
    clear_has_card();
  }
  card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.UserList.card)
}

// optional string id_card = 12;
inline bool UserList::has_id_card() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserList::set_has_id_card() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserList::clear_has_id_card() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserList::clear_id_card() {
  id_card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id_card();
}
inline const ::std::string& UserList::id_card() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.id_card)
  return id_card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_id_card(const ::std::string& value) {
  set_has_id_card();
  id_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.id_card)
}
inline void UserList::set_id_card(const char* value) {
  set_has_id_card();
  id_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.UserList.id_card)
}
inline void UserList::set_id_card(const char* value, size_t size) {
  set_has_id_card();
  id_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.UserList.id_card)
}
inline ::std::string* UserList::mutable_id_card() {
  set_has_id_card();
  // @@protoc_insertion_point(field_mutable:Czhtdev.UserList.id_card)
  return id_card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserList::release_id_card() {
  // @@protoc_insertion_point(field_release:Czhtdev.UserList.id_card)
  clear_has_id_card();
  return id_card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserList::set_allocated_id_card(::std::string* id_card) {
  if (id_card != NULL) {
    set_has_id_card();
  } else {
    clear_has_id_card();
  }
  id_card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id_card);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.UserList.id_card)
}

// optional int32 modify_type = 13;
inline bool UserList::has_modify_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UserList::set_has_modify_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UserList::clear_has_modify_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UserList::clear_modify_type() {
  modify_type_ = 0;
  clear_has_modify_type();
}
inline ::google::protobuf::int32 UserList::modify_type() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UserList.modify_type)
  return modify_type_;
}
inline void UserList::set_modify_type(::google::protobuf::int32 value) {
  set_has_modify_type();
  modify_type_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.UserList.modify_type)
}

inline const UserList* UserList::internal_default_instance() {
  return &UserList_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteLocalUser

// required string user_id = 1;
inline bool DeleteLocalUser::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteLocalUser::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteLocalUser::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteLocalUser::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& DeleteLocalUser::user_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.DeleteLocalUser.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteLocalUser::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.DeleteLocalUser.user_id)
}
inline void DeleteLocalUser::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.DeleteLocalUser.user_id)
}
inline void DeleteLocalUser::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.DeleteLocalUser.user_id)
}
inline ::std::string* DeleteLocalUser::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.DeleteLocalUser.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteLocalUser::release_user_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.DeleteLocalUser.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteLocalUser::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.DeleteLocalUser.user_id)
}

inline const DeleteLocalUser* DeleteLocalUser::internal_default_instance() {
  return &DeleteLocalUser_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryLocalUser

// required string user_id = 1;
inline bool QueryLocalUser::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryLocalUser::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryLocalUser::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryLocalUser::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QueryLocalUser::user_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.QueryLocalUser.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryLocalUser::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.QueryLocalUser.user_id)
}
inline void QueryLocalUser::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.QueryLocalUser.user_id)
}
inline void QueryLocalUser::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.QueryLocalUser.user_id)
}
inline ::std::string* QueryLocalUser::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.QueryLocalUser.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryLocalUser::release_user_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.QueryLocalUser.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryLocalUser::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.QueryLocalUser.user_id)
}

inline const QueryLocalUser* QueryLocalUser::internal_default_instance() {
  return &QueryLocalUser_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryLocalUserList

// required int32 state = 1;
inline bool QueryLocalUserList::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryLocalUserList::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryLocalUserList::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryLocalUserList::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 QueryLocalUserList::state() const {
  // @@protoc_insertion_point(field_get:Czhtdev.QueryLocalUserList.state)
  return state_;
}
inline void QueryLocalUserList::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.QueryLocalUserList.state)
}

// optional string name = 2;
inline bool QueryLocalUserList::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryLocalUserList::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryLocalUserList::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryLocalUserList::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& QueryLocalUserList::name() const {
  // @@protoc_insertion_point(field_get:Czhtdev.QueryLocalUserList.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryLocalUserList::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.QueryLocalUserList.name)
}
inline void QueryLocalUserList::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.QueryLocalUserList.name)
}
inline void QueryLocalUserList::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.QueryLocalUserList.name)
}
inline ::std::string* QueryLocalUserList::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Czhtdev.QueryLocalUserList.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryLocalUserList::release_name() {
  // @@protoc_insertion_point(field_release:Czhtdev.QueryLocalUserList.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryLocalUserList::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.QueryLocalUserList.name)
}

inline const QueryLocalUserList* QueryLocalUserList::internal_default_instance() {
  return &QueryLocalUserList_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryPassageRecord

// required int32 id = 2;
inline bool QueryPassageRecord::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryPassageRecord::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryPassageRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryPassageRecord::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 QueryPassageRecord::id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.QueryPassageRecord.id)
  return id_;
}
inline void QueryPassageRecord::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.QueryPassageRecord.id)
}

inline const QueryPassageRecord* QueryPassageRecord::internal_default_instance() {
  return &QueryPassageRecord_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryPassageRecordList

// required int32 state = 1;
inline bool QueryPassageRecordList::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryPassageRecordList::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryPassageRecordList::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryPassageRecordList::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 QueryPassageRecordList::state() const {
  // @@protoc_insertion_point(field_get:Czhtdev.QueryPassageRecordList.state)
  return state_;
}
inline void QueryPassageRecordList::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.QueryPassageRecordList.state)
}

// optional string name = 2;
inline bool QueryPassageRecordList::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryPassageRecordList::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryPassageRecordList::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryPassageRecordList::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& QueryPassageRecordList::name() const {
  // @@protoc_insertion_point(field_get:Czhtdev.QueryPassageRecordList.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryPassageRecordList::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.QueryPassageRecordList.name)
}
inline void QueryPassageRecordList::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.QueryPassageRecordList.name)
}
inline void QueryPassageRecordList::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.QueryPassageRecordList.name)
}
inline ::std::string* QueryPassageRecordList::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Czhtdev.QueryPassageRecordList.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryPassageRecordList::release_name() {
  // @@protoc_insertion_point(field_release:Czhtdev.QueryPassageRecordList.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryPassageRecordList::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.QueryPassageRecordList.name)
}

// optional .Czhtdev.TimePeriod time = 3;
inline bool QueryPassageRecordList::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryPassageRecordList::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryPassageRecordList::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryPassageRecordList::clear_time() {
  if (time_ != NULL) time_->::Czhtdev::TimePeriod::Clear();
  clear_has_time();
}
inline const ::Czhtdev::TimePeriod& QueryPassageRecordList::time() const {
  // @@protoc_insertion_point(field_get:Czhtdev.QueryPassageRecordList.time)
  return time_ != NULL ? *time_
                         : *::Czhtdev::TimePeriod::internal_default_instance();
}
inline ::Czhtdev::TimePeriod* QueryPassageRecordList::mutable_time() {
  set_has_time();
  if (time_ == NULL) {
    time_ = new ::Czhtdev::TimePeriod;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.QueryPassageRecordList.time)
  return time_;
}
inline ::Czhtdev::TimePeriod* QueryPassageRecordList::release_time() {
  // @@protoc_insertion_point(field_release:Czhtdev.QueryPassageRecordList.time)
  clear_has_time();
  ::Czhtdev::TimePeriod* temp = time_;
  time_ = NULL;
  return temp;
}
inline void QueryPassageRecordList::set_allocated_time(::Czhtdev::TimePeriod* time) {
  delete time_;
  time_ = time;
  if (time) {
    set_has_time();
  } else {
    clear_has_time();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.QueryPassageRecordList.time)
}

inline const QueryPassageRecordList* QueryPassageRecordList::internal_default_instance() {
  return &QueryPassageRecordList_default_instance_.get();
}
// -------------------------------------------------------------------

// TimePeriod

// required uint64 begintime = 1;
inline bool TimePeriod::has_begintime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimePeriod::set_has_begintime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimePeriod::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimePeriod::clear_begintime() {
  begintime_ = GOOGLE_ULONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::uint64 TimePeriod::begintime() const {
  // @@protoc_insertion_point(field_get:Czhtdev.TimePeriod.begintime)
  return begintime_;
}
inline void TimePeriod::set_begintime(::google::protobuf::uint64 value) {
  set_has_begintime();
  begintime_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.TimePeriod.begintime)
}

// required uint64 endtime = 2;
inline bool TimePeriod::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimePeriod::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimePeriod::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimePeriod::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 TimePeriod::endtime() const {
  // @@protoc_insertion_point(field_get:Czhtdev.TimePeriod.endtime)
  return endtime_;
}
inline void TimePeriod::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.TimePeriod.endtime)
}

inline const TimePeriod* TimePeriod::internal_default_instance() {
  return &TimePeriod_default_instance_.get();
}
// -------------------------------------------------------------------

// PassageRecord

// required int32 id = 1;
inline bool PassageRecord::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassageRecord::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassageRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassageRecord::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PassageRecord::id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.id)
  return id_;
}
inline void PassageRecord::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecord.id)
}

// required bytes image = 2;
inline bool PassageRecord::has_image() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassageRecord::set_has_image() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassageRecord::clear_has_image() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassageRecord::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image();
}
inline const ::std::string& PassageRecord::image() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.image)
  return image_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassageRecord::set_image(const ::std::string& value) {
  set_has_image();
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecord.image)
}
inline void PassageRecord::set_image(const char* value) {
  set_has_image();
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.PassageRecord.image)
}
inline void PassageRecord::set_image(const void* value, size_t size) {
  set_has_image();
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.PassageRecord.image)
}
inline ::std::string* PassageRecord::mutable_image() {
  set_has_image();
  // @@protoc_insertion_point(field_mutable:Czhtdev.PassageRecord.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassageRecord::release_image() {
  // @@protoc_insertion_point(field_release:Czhtdev.PassageRecord.image)
  clear_has_image();
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassageRecord::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    set_has_image();
  } else {
    clear_has_image();
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.PassageRecord.image)
}

// required uint64 time = 3;
inline bool PassageRecord::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PassageRecord::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PassageRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PassageRecord::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 PassageRecord::time() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.time)
  return time_;
}
inline void PassageRecord::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecord.time)
}

// optional string user_id = 4;
inline bool PassageRecord::has_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PassageRecord::set_has_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PassageRecord::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PassageRecord::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& PassageRecord::user_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassageRecord::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecord.user_id)
}
inline void PassageRecord::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.PassageRecord.user_id)
}
inline void PassageRecord::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.PassageRecord.user_id)
}
inline ::std::string* PassageRecord::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.PassageRecord.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassageRecord::release_user_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.PassageRecord.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassageRecord::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.PassageRecord.user_id)
}

// optional string name = 5;
inline bool PassageRecord::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PassageRecord::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PassageRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PassageRecord::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PassageRecord::name() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassageRecord::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecord.name)
}
inline void PassageRecord::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.PassageRecord.name)
}
inline void PassageRecord::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.PassageRecord.name)
}
inline ::std::string* PassageRecord::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Czhtdev.PassageRecord.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassageRecord::release_name() {
  // @@protoc_insertion_point(field_release:Czhtdev.PassageRecord.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassageRecord::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.PassageRecord.name)
}

// optional bool permission_time = 6;
inline bool PassageRecord::has_permission_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PassageRecord::set_has_permission_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PassageRecord::clear_has_permission_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PassageRecord::clear_permission_time() {
  permission_time_ = false;
  clear_has_permission_time();
}
inline bool PassageRecord::permission_time() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.permission_time)
  return permission_time_;
}
inline void PassageRecord::set_permission_time(bool value) {
  set_has_permission_time();
  permission_time_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecord.permission_time)
}

// optional bool permission_area = 7;
inline bool PassageRecord::has_permission_area() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PassageRecord::set_has_permission_area() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PassageRecord::clear_has_permission_area() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PassageRecord::clear_permission_area() {
  permission_area_ = false;
  clear_has_permission_area();
}
inline bool PassageRecord::permission_area() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.permission_area)
  return permission_area_;
}
inline void PassageRecord::set_permission_area(bool value) {
  set_has_permission_area();
  permission_area_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecord.permission_area)
}

// optional bool living = 8;
inline bool PassageRecord::has_living() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PassageRecord::set_has_living() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PassageRecord::clear_has_living() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PassageRecord::clear_living() {
  living_ = false;
  clear_has_living();
}
inline bool PassageRecord::living() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.living)
  return living_;
}
inline void PassageRecord::set_living(bool value) {
  set_has_living();
  living_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecord.living)
}

// optional int32 type = 9;
inline bool PassageRecord::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PassageRecord::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PassageRecord::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PassageRecord::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PassageRecord::type() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.type)
  return type_;
}
inline void PassageRecord::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecord.type)
}

// optional int32 score = 10;
inline bool PassageRecord::has_score() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PassageRecord::set_has_score() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PassageRecord::clear_has_score() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PassageRecord::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 PassageRecord::score() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.score)
  return score_;
}
inline void PassageRecord::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecord.score)
}

// optional .Czhtdev.Face_Param faceparam = 11;
inline bool PassageRecord::has_faceparam() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PassageRecord::set_has_faceparam() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PassageRecord::clear_has_faceparam() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PassageRecord::clear_faceparam() {
  if (faceparam_ != NULL) faceparam_->::Czhtdev::Face_Param::Clear();
  clear_has_faceparam();
}
inline const ::Czhtdev::Face_Param& PassageRecord::faceparam() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecord.faceparam)
  return faceparam_ != NULL ? *faceparam_
                         : *::Czhtdev::Face_Param::internal_default_instance();
}
inline ::Czhtdev::Face_Param* PassageRecord::mutable_faceparam() {
  set_has_faceparam();
  if (faceparam_ == NULL) {
    faceparam_ = new ::Czhtdev::Face_Param;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.PassageRecord.faceparam)
  return faceparam_;
}
inline ::Czhtdev::Face_Param* PassageRecord::release_faceparam() {
  // @@protoc_insertion_point(field_release:Czhtdev.PassageRecord.faceparam)
  clear_has_faceparam();
  ::Czhtdev::Face_Param* temp = faceparam_;
  faceparam_ = NULL;
  return temp;
}
inline void PassageRecord::set_allocated_faceparam(::Czhtdev::Face_Param* faceparam) {
  delete faceparam_;
  faceparam_ = faceparam;
  if (faceparam) {
    set_has_faceparam();
  } else {
    clear_has_faceparam();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.PassageRecord.faceparam)
}

inline const PassageRecord* PassageRecord::internal_default_instance() {
  return &PassageRecord_default_instance_.get();
}
// -------------------------------------------------------------------

// Face_Param

// required int32 faceLeftTopX = 1;
inline bool Face_Param::has_facelefttopx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Face_Param::set_has_facelefttopx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Face_Param::clear_has_facelefttopx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Face_Param::clear_facelefttopx() {
  facelefttopx_ = 0;
  clear_has_facelefttopx();
}
inline ::google::protobuf::int32 Face_Param::facelefttopx() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Face_Param.faceLeftTopX)
  return facelefttopx_;
}
inline void Face_Param::set_facelefttopx(::google::protobuf::int32 value) {
  set_has_facelefttopx();
  facelefttopx_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Face_Param.faceLeftTopX)
}

// required int32 faceLeftTopY = 2;
inline bool Face_Param::has_facelefttopy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Face_Param::set_has_facelefttopy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Face_Param::clear_has_facelefttopy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Face_Param::clear_facelefttopy() {
  facelefttopy_ = 0;
  clear_has_facelefttopy();
}
inline ::google::protobuf::int32 Face_Param::facelefttopy() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Face_Param.faceLeftTopY)
  return facelefttopy_;
}
inline void Face_Param::set_facelefttopy(::google::protobuf::int32 value) {
  set_has_facelefttopy();
  facelefttopy_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Face_Param.faceLeftTopY)
}

// required int32 faceWidth = 3;
inline bool Face_Param::has_facewidth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Face_Param::set_has_facewidth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Face_Param::clear_has_facewidth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Face_Param::clear_facewidth() {
  facewidth_ = 0;
  clear_has_facewidth();
}
inline ::google::protobuf::int32 Face_Param::facewidth() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Face_Param.faceWidth)
  return facewidth_;
}
inline void Face_Param::set_facewidth(::google::protobuf::int32 value) {
  set_has_facewidth();
  facewidth_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Face_Param.faceWidth)
}

// required int32 faceHeight = 4;
inline bool Face_Param::has_faceheight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Face_Param::set_has_faceheight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Face_Param::clear_has_faceheight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Face_Param::clear_faceheight() {
  faceheight_ = 0;
  clear_has_faceheight();
}
inline ::google::protobuf::int32 Face_Param::faceheight() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Face_Param.faceHeight)
  return faceheight_;
}
inline void Face_Param::set_faceheight(::google::protobuf::int32 value) {
  set_has_faceheight();
  faceheight_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Face_Param.faceHeight)
}

inline const Face_Param* Face_Param::internal_default_instance() {
  return &Face_Param_default_instance_.get();
}
// -------------------------------------------------------------------

// PassageRecordList

// required int32 id = 1;
inline bool PassageRecordList::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassageRecordList::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassageRecordList::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassageRecordList::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PassageRecordList::id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecordList.id)
  return id_;
}
inline void PassageRecordList::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecordList.id)
}

// required uint64 time = 3;
inline bool PassageRecordList::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassageRecordList::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassageRecordList::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassageRecordList::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 PassageRecordList::time() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecordList.time)
  return time_;
}
inline void PassageRecordList::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecordList.time)
}

// optional string user_id = 4;
inline bool PassageRecordList::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PassageRecordList::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PassageRecordList::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PassageRecordList::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& PassageRecordList::user_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecordList.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassageRecordList::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecordList.user_id)
}
inline void PassageRecordList::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.PassageRecordList.user_id)
}
inline void PassageRecordList::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.PassageRecordList.user_id)
}
inline ::std::string* PassageRecordList::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.PassageRecordList.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassageRecordList::release_user_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.PassageRecordList.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassageRecordList::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.PassageRecordList.user_id)
}

// optional string name = 5;
inline bool PassageRecordList::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PassageRecordList::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PassageRecordList::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PassageRecordList::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PassageRecordList::name() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecordList.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassageRecordList::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecordList.name)
}
inline void PassageRecordList::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.PassageRecordList.name)
}
inline void PassageRecordList::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.PassageRecordList.name)
}
inline ::std::string* PassageRecordList::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Czhtdev.PassageRecordList.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassageRecordList::release_name() {
  // @@protoc_insertion_point(field_release:Czhtdev.PassageRecordList.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassageRecordList::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.PassageRecordList.name)
}

// optional bool permission_time = 6;
inline bool PassageRecordList::has_permission_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PassageRecordList::set_has_permission_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PassageRecordList::clear_has_permission_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PassageRecordList::clear_permission_time() {
  permission_time_ = false;
  clear_has_permission_time();
}
inline bool PassageRecordList::permission_time() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecordList.permission_time)
  return permission_time_;
}
inline void PassageRecordList::set_permission_time(bool value) {
  set_has_permission_time();
  permission_time_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecordList.permission_time)
}

// optional bool permission_area = 7;
inline bool PassageRecordList::has_permission_area() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PassageRecordList::set_has_permission_area() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PassageRecordList::clear_has_permission_area() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PassageRecordList::clear_permission_area() {
  permission_area_ = false;
  clear_has_permission_area();
}
inline bool PassageRecordList::permission_area() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecordList.permission_area)
  return permission_area_;
}
inline void PassageRecordList::set_permission_area(bool value) {
  set_has_permission_area();
  permission_area_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecordList.permission_area)
}

// optional bool living = 8;
inline bool PassageRecordList::has_living() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PassageRecordList::set_has_living() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PassageRecordList::clear_has_living() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PassageRecordList::clear_living() {
  living_ = false;
  clear_has_living();
}
inline bool PassageRecordList::living() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecordList.living)
  return living_;
}
inline void PassageRecordList::set_living(bool value) {
  set_has_living();
  living_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecordList.living)
}

// optional int32 type = 9;
inline bool PassageRecordList::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PassageRecordList::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PassageRecordList::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PassageRecordList::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PassageRecordList::type() const {
  // @@protoc_insertion_point(field_get:Czhtdev.PassageRecordList.type)
  return type_;
}
inline void PassageRecordList::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.PassageRecordList.type)
}

inline const PassageRecordList* PassageRecordList::internal_default_instance() {
  return &PassageRecordList_default_instance_.get();
}
// -------------------------------------------------------------------

// AddPicture

// required string user_id = 1;
inline bool AddPicture::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddPicture::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddPicture::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddPicture::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& AddPicture::user_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.AddPicture.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddPicture::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.AddPicture.user_id)
}
inline void AddPicture::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.AddPicture.user_id)
}
inline void AddPicture::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.AddPicture.user_id)
}
inline ::std::string* AddPicture::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.AddPicture.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddPicture::release_user_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.AddPicture.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddPicture::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.AddPicture.user_id)
}

// required int32 picture_id = 2;
inline bool AddPicture::has_picture_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddPicture::set_has_picture_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddPicture::clear_has_picture_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddPicture::clear_picture_id() {
  picture_id_ = 0;
  clear_has_picture_id();
}
inline ::google::protobuf::int32 AddPicture::picture_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.AddPicture.picture_id)
  return picture_id_;
}
inline void AddPicture::set_picture_id(::google::protobuf::int32 value) {
  set_has_picture_id();
  picture_id_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.AddPicture.picture_id)
}

// required bytes face_data = 3;
inline bool AddPicture::has_face_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddPicture::set_has_face_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddPicture::clear_has_face_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddPicture::clear_face_data() {
  face_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_face_data();
}
inline const ::std::string& AddPicture::face_data() const {
  // @@protoc_insertion_point(field_get:Czhtdev.AddPicture.face_data)
  return face_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddPicture::set_face_data(const ::std::string& value) {
  set_has_face_data();
  face_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.AddPicture.face_data)
}
inline void AddPicture::set_face_data(const char* value) {
  set_has_face_data();
  face_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.AddPicture.face_data)
}
inline void AddPicture::set_face_data(const void* value, size_t size) {
  set_has_face_data();
  face_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.AddPicture.face_data)
}
inline ::std::string* AddPicture::mutable_face_data() {
  set_has_face_data();
  // @@protoc_insertion_point(field_mutable:Czhtdev.AddPicture.face_data)
  return face_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddPicture::release_face_data() {
  // @@protoc_insertion_point(field_release:Czhtdev.AddPicture.face_data)
  clear_has_face_data();
  return face_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddPicture::set_allocated_face_data(::std::string* face_data) {
  if (face_data != NULL) {
    set_has_face_data();
  } else {
    clear_has_face_data();
  }
  face_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), face_data);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.AddPicture.face_data)
}

inline const AddPicture* AddPicture::internal_default_instance() {
  return &AddPicture_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdatePicture

// required string user_id = 1;
inline bool UpdatePicture::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdatePicture::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdatePicture::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdatePicture::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& UpdatePicture::user_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UpdatePicture.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdatePicture::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.UpdatePicture.user_id)
}
inline void UpdatePicture::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.UpdatePicture.user_id)
}
inline void UpdatePicture::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.UpdatePicture.user_id)
}
inline ::std::string* UpdatePicture::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.UpdatePicture.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdatePicture::release_user_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.UpdatePicture.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdatePicture::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.UpdatePicture.user_id)
}

// required int32 picture_old = 2;
inline bool UpdatePicture::has_picture_old() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdatePicture::set_has_picture_old() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdatePicture::clear_has_picture_old() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdatePicture::clear_picture_old() {
  picture_old_ = 0;
  clear_has_picture_old();
}
inline ::google::protobuf::int32 UpdatePicture::picture_old() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UpdatePicture.picture_old)
  return picture_old_;
}
inline void UpdatePicture::set_picture_old(::google::protobuf::int32 value) {
  set_has_picture_old();
  picture_old_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.UpdatePicture.picture_old)
}

// required int32 picture_new = 3;
inline bool UpdatePicture::has_picture_new() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdatePicture::set_has_picture_new() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdatePicture::clear_has_picture_new() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdatePicture::clear_picture_new() {
  picture_new_ = 0;
  clear_has_picture_new();
}
inline ::google::protobuf::int32 UpdatePicture::picture_new() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UpdatePicture.picture_new)
  return picture_new_;
}
inline void UpdatePicture::set_picture_new(::google::protobuf::int32 value) {
  set_has_picture_new();
  picture_new_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.UpdatePicture.picture_new)
}

// required bytes face_data = 4;
inline bool UpdatePicture::has_face_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdatePicture::set_has_face_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdatePicture::clear_has_face_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdatePicture::clear_face_data() {
  face_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_face_data();
}
inline const ::std::string& UpdatePicture::face_data() const {
  // @@protoc_insertion_point(field_get:Czhtdev.UpdatePicture.face_data)
  return face_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdatePicture::set_face_data(const ::std::string& value) {
  set_has_face_data();
  face_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.UpdatePicture.face_data)
}
inline void UpdatePicture::set_face_data(const char* value) {
  set_has_face_data();
  face_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.UpdatePicture.face_data)
}
inline void UpdatePicture::set_face_data(const void* value, size_t size) {
  set_has_face_data();
  face_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.UpdatePicture.face_data)
}
inline ::std::string* UpdatePicture::mutable_face_data() {
  set_has_face_data();
  // @@protoc_insertion_point(field_mutable:Czhtdev.UpdatePicture.face_data)
  return face_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdatePicture::release_face_data() {
  // @@protoc_insertion_point(field_release:Czhtdev.UpdatePicture.face_data)
  clear_has_face_data();
  return face_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdatePicture::set_allocated_face_data(::std::string* face_data) {
  if (face_data != NULL) {
    set_has_face_data();
  } else {
    clear_has_face_data();
  }
  face_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), face_data);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.UpdatePicture.face_data)
}

inline const UpdatePicture* UpdatePicture::internal_default_instance() {
  return &UpdatePicture_default_instance_.get();
}
// -------------------------------------------------------------------

// DelPicture

// required string user_id = 1;
inline bool DelPicture::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelPicture::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelPicture::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelPicture::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& DelPicture::user_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.DelPicture.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelPicture::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.DelPicture.user_id)
}
inline void DelPicture::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.DelPicture.user_id)
}
inline void DelPicture::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.DelPicture.user_id)
}
inline ::std::string* DelPicture::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.DelPicture.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelPicture::release_user_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.DelPicture.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelPicture::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.DelPicture.user_id)
}

// required int32 picture_id = 2;
inline bool DelPicture::has_picture_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelPicture::set_has_picture_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelPicture::clear_has_picture_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelPicture::clear_picture_id() {
  picture_id_ = 0;
  clear_has_picture_id();
}
inline ::google::protobuf::int32 DelPicture::picture_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.DelPicture.picture_id)
  return picture_id_;
}
inline void DelPicture::set_picture_id(::google::protobuf::int32 value) {
  set_has_picture_id();
  picture_id_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.DelPicture.picture_id)
}

inline const DelPicture* DelPicture::internal_default_instance() {
  return &DelPicture_default_instance_.get();
}
// -------------------------------------------------------------------

// IDCard

// required string card_id = 1;
inline bool IDCard::has_card_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IDCard::set_has_card_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IDCard::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IDCard::clear_card_id() {
  card_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_id();
}
inline const ::std::string& IDCard::card_id() const {
  // @@protoc_insertion_point(field_get:Czhtdev.IDCard.card_id)
  return card_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IDCard::set_card_id(const ::std::string& value) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.IDCard.card_id)
}
inline void IDCard::set_card_id(const char* value) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.IDCard.card_id)
}
inline void IDCard::set_card_id(const char* value, size_t size) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.IDCard.card_id)
}
inline ::std::string* IDCard::mutable_card_id() {
  set_has_card_id();
  // @@protoc_insertion_point(field_mutable:Czhtdev.IDCard.card_id)
  return card_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IDCard::release_card_id() {
  // @@protoc_insertion_point(field_release:Czhtdev.IDCard.card_id)
  clear_has_card_id();
  return card_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IDCard::set_allocated_card_id(::std::string* card_id) {
  if (card_id != NULL) {
    set_has_card_id();
  } else {
    clear_has_card_id();
  }
  card_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_id);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.IDCard.card_id)
}

// optional int32 status = 2;
inline bool IDCard::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IDCard::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IDCard::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IDCard::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 IDCard::status() const {
  // @@protoc_insertion_point(field_get:Czhtdev.IDCard.status)
  return status_;
}
inline void IDCard::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.IDCard.status)
}

inline const IDCard* IDCard::internal_default_instance() {
  return &IDCard_default_instance_.get();
}
// -------------------------------------------------------------------

// IPTable

// required string ip = 1;
inline bool IPTable::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IPTable::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IPTable::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IPTable::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& IPTable::ip() const {
  // @@protoc_insertion_point(field_get:Czhtdev.IPTable.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IPTable::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.IPTable.ip)
}
inline void IPTable::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.IPTable.ip)
}
inline void IPTable::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.IPTable.ip)
}
inline ::std::string* IPTable::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:Czhtdev.IPTable.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IPTable::release_ip() {
  // @@protoc_insertion_point(field_release:Czhtdev.IPTable.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IPTable::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.IPTable.ip)
}

// required string house_number = 2;
inline bool IPTable::has_house_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IPTable::set_has_house_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IPTable::clear_has_house_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IPTable::clear_house_number() {
  house_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_house_number();
}
inline const ::std::string& IPTable::house_number() const {
  // @@protoc_insertion_point(field_get:Czhtdev.IPTable.house_number)
  return house_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IPTable::set_house_number(const ::std::string& value) {
  set_has_house_number();
  house_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.IPTable.house_number)
}
inline void IPTable::set_house_number(const char* value) {
  set_has_house_number();
  house_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.IPTable.house_number)
}
inline void IPTable::set_house_number(const char* value, size_t size) {
  set_has_house_number();
  house_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.IPTable.house_number)
}
inline ::std::string* IPTable::mutable_house_number() {
  set_has_house_number();
  // @@protoc_insertion_point(field_mutable:Czhtdev.IPTable.house_number)
  return house_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IPTable::release_house_number() {
  // @@protoc_insertion_point(field_release:Czhtdev.IPTable.house_number)
  clear_has_house_number();
  return house_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IPTable::set_allocated_house_number(::std::string* house_number) {
  if (house_number != NULL) {
    set_has_house_number();
  } else {
    clear_has_house_number();
  }
  house_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), house_number);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.IPTable.house_number)
}

inline const IPTable* IPTable::internal_default_instance() {
  return &IPTable_default_instance_.get();
}
// -------------------------------------------------------------------

// IP

// required string ip = 1;
inline bool IP::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IP::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IP::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IP::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& IP::ip() const {
  // @@protoc_insertion_point(field_get:Czhtdev.IP.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IP::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.IP.ip)
}
inline void IP::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.IP.ip)
}
inline void IP::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.IP.ip)
}
inline ::std::string* IP::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:Czhtdev.IP.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IP::release_ip() {
  // @@protoc_insertion_point(field_release:Czhtdev.IP.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IP::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.IP.ip)
}

inline const IP* IP::internal_default_instance() {
  return &IP_default_instance_.get();
}
// -------------------------------------------------------------------

// Request

// optional .Czhtdev.User add_user = 1;
inline bool Request::has_add_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_add_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_add_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_add_user() {
  if (add_user_ != NULL) add_user_->::Czhtdev::User::Clear();
  clear_has_add_user();
}
inline const ::Czhtdev::User& Request::add_user() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.add_user)
  return add_user_ != NULL ? *add_user_
                         : *::Czhtdev::User::internal_default_instance();
}
inline ::Czhtdev::User* Request::mutable_add_user() {
  set_has_add_user();
  if (add_user_ == NULL) {
    add_user_ = new ::Czhtdev::User;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.add_user)
  return add_user_;
}
inline ::Czhtdev::User* Request::release_add_user() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.add_user)
  clear_has_add_user();
  ::Czhtdev::User* temp = add_user_;
  add_user_ = NULL;
  return temp;
}
inline void Request::set_allocated_add_user(::Czhtdev::User* add_user) {
  delete add_user_;
  add_user_ = add_user;
  if (add_user) {
    set_has_add_user();
  } else {
    clear_has_add_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.add_user)
}

// optional .Czhtdev.DeleteLocalUser detele_user = 2;
inline bool Request::has_detele_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_detele_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_detele_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_detele_user() {
  if (detele_user_ != NULL) detele_user_->::Czhtdev::DeleteLocalUser::Clear();
  clear_has_detele_user();
}
inline const ::Czhtdev::DeleteLocalUser& Request::detele_user() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.detele_user)
  return detele_user_ != NULL ? *detele_user_
                         : *::Czhtdev::DeleteLocalUser::internal_default_instance();
}
inline ::Czhtdev::DeleteLocalUser* Request::mutable_detele_user() {
  set_has_detele_user();
  if (detele_user_ == NULL) {
    detele_user_ = new ::Czhtdev::DeleteLocalUser;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.detele_user)
  return detele_user_;
}
inline ::Czhtdev::DeleteLocalUser* Request::release_detele_user() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.detele_user)
  clear_has_detele_user();
  ::Czhtdev::DeleteLocalUser* temp = detele_user_;
  detele_user_ = NULL;
  return temp;
}
inline void Request::set_allocated_detele_user(::Czhtdev::DeleteLocalUser* detele_user) {
  delete detele_user_;
  detele_user_ = detele_user;
  if (detele_user) {
    set_has_detele_user();
  } else {
    clear_has_detele_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.detele_user)
}

// optional .Czhtdev.User update_user = 3;
inline bool Request::has_update_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_update_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_update_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_update_user() {
  if (update_user_ != NULL) update_user_->::Czhtdev::User::Clear();
  clear_has_update_user();
}
inline const ::Czhtdev::User& Request::update_user() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.update_user)
  return update_user_ != NULL ? *update_user_
                         : *::Czhtdev::User::internal_default_instance();
}
inline ::Czhtdev::User* Request::mutable_update_user() {
  set_has_update_user();
  if (update_user_ == NULL) {
    update_user_ = new ::Czhtdev::User;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.update_user)
  return update_user_;
}
inline ::Czhtdev::User* Request::release_update_user() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.update_user)
  clear_has_update_user();
  ::Czhtdev::User* temp = update_user_;
  update_user_ = NULL;
  return temp;
}
inline void Request::set_allocated_update_user(::Czhtdev::User* update_user) {
  delete update_user_;
  update_user_ = update_user;
  if (update_user) {
    set_has_update_user();
  } else {
    clear_has_update_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.update_user)
}

// optional .Czhtdev.QueryLocalUser query_user = 4;
inline bool Request::has_query_user() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request::set_has_query_user() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request::clear_has_query_user() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request::clear_query_user() {
  if (query_user_ != NULL) query_user_->::Czhtdev::QueryLocalUser::Clear();
  clear_has_query_user();
}
inline const ::Czhtdev::QueryLocalUser& Request::query_user() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.query_user)
  return query_user_ != NULL ? *query_user_
                         : *::Czhtdev::QueryLocalUser::internal_default_instance();
}
inline ::Czhtdev::QueryLocalUser* Request::mutable_query_user() {
  set_has_query_user();
  if (query_user_ == NULL) {
    query_user_ = new ::Czhtdev::QueryLocalUser;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.query_user)
  return query_user_;
}
inline ::Czhtdev::QueryLocalUser* Request::release_query_user() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.query_user)
  clear_has_query_user();
  ::Czhtdev::QueryLocalUser* temp = query_user_;
  query_user_ = NULL;
  return temp;
}
inline void Request::set_allocated_query_user(::Czhtdev::QueryLocalUser* query_user) {
  delete query_user_;
  query_user_ = query_user;
  if (query_user) {
    set_has_query_user();
  } else {
    clear_has_query_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.query_user)
}

// optional .Czhtdev.QueryLocalUserList query_user_list = 5;
inline bool Request::has_query_user_list() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request::set_has_query_user_list() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request::clear_has_query_user_list() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request::clear_query_user_list() {
  if (query_user_list_ != NULL) query_user_list_->::Czhtdev::QueryLocalUserList::Clear();
  clear_has_query_user_list();
}
inline const ::Czhtdev::QueryLocalUserList& Request::query_user_list() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.query_user_list)
  return query_user_list_ != NULL ? *query_user_list_
                         : *::Czhtdev::QueryLocalUserList::internal_default_instance();
}
inline ::Czhtdev::QueryLocalUserList* Request::mutable_query_user_list() {
  set_has_query_user_list();
  if (query_user_list_ == NULL) {
    query_user_list_ = new ::Czhtdev::QueryLocalUserList;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.query_user_list)
  return query_user_list_;
}
inline ::Czhtdev::QueryLocalUserList* Request::release_query_user_list() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.query_user_list)
  clear_has_query_user_list();
  ::Czhtdev::QueryLocalUserList* temp = query_user_list_;
  query_user_list_ = NULL;
  return temp;
}
inline void Request::set_allocated_query_user_list(::Czhtdev::QueryLocalUserList* query_user_list) {
  delete query_user_list_;
  query_user_list_ = query_user_list;
  if (query_user_list) {
    set_has_query_user_list();
  } else {
    clear_has_query_user_list();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.query_user_list)
}

// optional .Czhtdev.AddPicture add_picture = 6;
inline bool Request::has_add_picture() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request::set_has_add_picture() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request::clear_has_add_picture() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request::clear_add_picture() {
  if (add_picture_ != NULL) add_picture_->::Czhtdev::AddPicture::Clear();
  clear_has_add_picture();
}
inline const ::Czhtdev::AddPicture& Request::add_picture() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.add_picture)
  return add_picture_ != NULL ? *add_picture_
                         : *::Czhtdev::AddPicture::internal_default_instance();
}
inline ::Czhtdev::AddPicture* Request::mutable_add_picture() {
  set_has_add_picture();
  if (add_picture_ == NULL) {
    add_picture_ = new ::Czhtdev::AddPicture;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.add_picture)
  return add_picture_;
}
inline ::Czhtdev::AddPicture* Request::release_add_picture() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.add_picture)
  clear_has_add_picture();
  ::Czhtdev::AddPicture* temp = add_picture_;
  add_picture_ = NULL;
  return temp;
}
inline void Request::set_allocated_add_picture(::Czhtdev::AddPicture* add_picture) {
  delete add_picture_;
  add_picture_ = add_picture;
  if (add_picture) {
    set_has_add_picture();
  } else {
    clear_has_add_picture();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.add_picture)
}

// optional .Czhtdev.UpdatePicture update_picture = 7;
inline bool Request::has_update_picture() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Request::set_has_update_picture() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Request::clear_has_update_picture() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Request::clear_update_picture() {
  if (update_picture_ != NULL) update_picture_->::Czhtdev::UpdatePicture::Clear();
  clear_has_update_picture();
}
inline const ::Czhtdev::UpdatePicture& Request::update_picture() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.update_picture)
  return update_picture_ != NULL ? *update_picture_
                         : *::Czhtdev::UpdatePicture::internal_default_instance();
}
inline ::Czhtdev::UpdatePicture* Request::mutable_update_picture() {
  set_has_update_picture();
  if (update_picture_ == NULL) {
    update_picture_ = new ::Czhtdev::UpdatePicture;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.update_picture)
  return update_picture_;
}
inline ::Czhtdev::UpdatePicture* Request::release_update_picture() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.update_picture)
  clear_has_update_picture();
  ::Czhtdev::UpdatePicture* temp = update_picture_;
  update_picture_ = NULL;
  return temp;
}
inline void Request::set_allocated_update_picture(::Czhtdev::UpdatePicture* update_picture) {
  delete update_picture_;
  update_picture_ = update_picture;
  if (update_picture) {
    set_has_update_picture();
  } else {
    clear_has_update_picture();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.update_picture)
}

// optional .Czhtdev.DelPicture detele_picture = 8;
inline bool Request::has_detele_picture() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Request::set_has_detele_picture() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Request::clear_has_detele_picture() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Request::clear_detele_picture() {
  if (detele_picture_ != NULL) detele_picture_->::Czhtdev::DelPicture::Clear();
  clear_has_detele_picture();
}
inline const ::Czhtdev::DelPicture& Request::detele_picture() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.detele_picture)
  return detele_picture_ != NULL ? *detele_picture_
                         : *::Czhtdev::DelPicture::internal_default_instance();
}
inline ::Czhtdev::DelPicture* Request::mutable_detele_picture() {
  set_has_detele_picture();
  if (detele_picture_ == NULL) {
    detele_picture_ = new ::Czhtdev::DelPicture;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.detele_picture)
  return detele_picture_;
}
inline ::Czhtdev::DelPicture* Request::release_detele_picture() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.detele_picture)
  clear_has_detele_picture();
  ::Czhtdev::DelPicture* temp = detele_picture_;
  detele_picture_ = NULL;
  return temp;
}
inline void Request::set_allocated_detele_picture(::Czhtdev::DelPicture* detele_picture) {
  delete detele_picture_;
  detele_picture_ = detele_picture;
  if (detele_picture) {
    set_has_detele_picture();
  } else {
    clear_has_detele_picture();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.detele_picture)
}

// optional .Czhtdev.QueryPassageRecord query_record = 9;
inline bool Request::has_query_record() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Request::set_has_query_record() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Request::clear_has_query_record() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Request::clear_query_record() {
  if (query_record_ != NULL) query_record_->::Czhtdev::QueryPassageRecord::Clear();
  clear_has_query_record();
}
inline const ::Czhtdev::QueryPassageRecord& Request::query_record() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.query_record)
  return query_record_ != NULL ? *query_record_
                         : *::Czhtdev::QueryPassageRecord::internal_default_instance();
}
inline ::Czhtdev::QueryPassageRecord* Request::mutable_query_record() {
  set_has_query_record();
  if (query_record_ == NULL) {
    query_record_ = new ::Czhtdev::QueryPassageRecord;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.query_record)
  return query_record_;
}
inline ::Czhtdev::QueryPassageRecord* Request::release_query_record() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.query_record)
  clear_has_query_record();
  ::Czhtdev::QueryPassageRecord* temp = query_record_;
  query_record_ = NULL;
  return temp;
}
inline void Request::set_allocated_query_record(::Czhtdev::QueryPassageRecord* query_record) {
  delete query_record_;
  query_record_ = query_record;
  if (query_record) {
    set_has_query_record();
  } else {
    clear_has_query_record();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.query_record)
}

// optional .Czhtdev.QueryPassageRecordList query_record_list = 10;
inline bool Request::has_query_record_list() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Request::set_has_query_record_list() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Request::clear_has_query_record_list() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Request::clear_query_record_list() {
  if (query_record_list_ != NULL) query_record_list_->::Czhtdev::QueryPassageRecordList::Clear();
  clear_has_query_record_list();
}
inline const ::Czhtdev::QueryPassageRecordList& Request::query_record_list() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.query_record_list)
  return query_record_list_ != NULL ? *query_record_list_
                         : *::Czhtdev::QueryPassageRecordList::internal_default_instance();
}
inline ::Czhtdev::QueryPassageRecordList* Request::mutable_query_record_list() {
  set_has_query_record_list();
  if (query_record_list_ == NULL) {
    query_record_list_ = new ::Czhtdev::QueryPassageRecordList;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.query_record_list)
  return query_record_list_;
}
inline ::Czhtdev::QueryPassageRecordList* Request::release_query_record_list() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.query_record_list)
  clear_has_query_record_list();
  ::Czhtdev::QueryPassageRecordList* temp = query_record_list_;
  query_record_list_ = NULL;
  return temp;
}
inline void Request::set_allocated_query_record_list(::Czhtdev::QueryPassageRecordList* query_record_list) {
  delete query_record_list_;
  query_record_list_ = query_record_list;
  if (query_record_list) {
    set_has_query_record_list();
  } else {
    clear_has_query_record_list();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.query_record_list)
}

// optional .Czhtdev.QueryPassageRecord synchronous_record = 11;
inline bool Request::has_synchronous_record() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Request::set_has_synchronous_record() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Request::clear_has_synchronous_record() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Request::clear_synchronous_record() {
  if (synchronous_record_ != NULL) synchronous_record_->::Czhtdev::QueryPassageRecord::Clear();
  clear_has_synchronous_record();
}
inline const ::Czhtdev::QueryPassageRecord& Request::synchronous_record() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.synchronous_record)
  return synchronous_record_ != NULL ? *synchronous_record_
                         : *::Czhtdev::QueryPassageRecord::internal_default_instance();
}
inline ::Czhtdev::QueryPassageRecord* Request::mutable_synchronous_record() {
  set_has_synchronous_record();
  if (synchronous_record_ == NULL) {
    synchronous_record_ = new ::Czhtdev::QueryPassageRecord;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.synchronous_record)
  return synchronous_record_;
}
inline ::Czhtdev::QueryPassageRecord* Request::release_synchronous_record() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.synchronous_record)
  clear_has_synchronous_record();
  ::Czhtdev::QueryPassageRecord* temp = synchronous_record_;
  synchronous_record_ = NULL;
  return temp;
}
inline void Request::set_allocated_synchronous_record(::Czhtdev::QueryPassageRecord* synchronous_record) {
  delete synchronous_record_;
  synchronous_record_ = synchronous_record;
  if (synchronous_record) {
    set_has_synchronous_record();
  } else {
    clear_has_synchronous_record();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.synchronous_record)
}

// optional .Czhtdev.ModifyConfig modify_cfg = 12;
inline bool Request::has_modify_cfg() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Request::set_has_modify_cfg() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Request::clear_has_modify_cfg() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Request::clear_modify_cfg() {
  if (modify_cfg_ != NULL) modify_cfg_->::Czhtdev::ModifyConfig::Clear();
  clear_has_modify_cfg();
}
inline const ::Czhtdev::ModifyConfig& Request::modify_cfg() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.modify_cfg)
  return modify_cfg_ != NULL ? *modify_cfg_
                         : *::Czhtdev::ModifyConfig::internal_default_instance();
}
inline ::Czhtdev::ModifyConfig* Request::mutable_modify_cfg() {
  set_has_modify_cfg();
  if (modify_cfg_ == NULL) {
    modify_cfg_ = new ::Czhtdev::ModifyConfig;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.modify_cfg)
  return modify_cfg_;
}
inline ::Czhtdev::ModifyConfig* Request::release_modify_cfg() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.modify_cfg)
  clear_has_modify_cfg();
  ::Czhtdev::ModifyConfig* temp = modify_cfg_;
  modify_cfg_ = NULL;
  return temp;
}
inline void Request::set_allocated_modify_cfg(::Czhtdev::ModifyConfig* modify_cfg) {
  delete modify_cfg_;
  modify_cfg_ = modify_cfg;
  if (modify_cfg) {
    set_has_modify_cfg();
  } else {
    clear_has_modify_cfg();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.modify_cfg)
}

// optional .Czhtdev.QueryConfig query_cfg = 13;
inline bool Request::has_query_cfg() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Request::set_has_query_cfg() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Request::clear_has_query_cfg() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Request::clear_query_cfg() {
  if (query_cfg_ != NULL) query_cfg_->::Czhtdev::QueryConfig::Clear();
  clear_has_query_cfg();
}
inline const ::Czhtdev::QueryConfig& Request::query_cfg() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.query_cfg)
  return query_cfg_ != NULL ? *query_cfg_
                         : *::Czhtdev::QueryConfig::internal_default_instance();
}
inline ::Czhtdev::QueryConfig* Request::mutable_query_cfg() {
  set_has_query_cfg();
  if (query_cfg_ == NULL) {
    query_cfg_ = new ::Czhtdev::QueryConfig;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.query_cfg)
  return query_cfg_;
}
inline ::Czhtdev::QueryConfig* Request::release_query_cfg() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.query_cfg)
  clear_has_query_cfg();
  ::Czhtdev::QueryConfig* temp = query_cfg_;
  query_cfg_ = NULL;
  return temp;
}
inline void Request::set_allocated_query_cfg(::Czhtdev::QueryConfig* query_cfg) {
  delete query_cfg_;
  query_cfg_ = query_cfg;
  if (query_cfg) {
    set_has_query_cfg();
  } else {
    clear_has_query_cfg();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.query_cfg)
}

// optional .Czhtdev.IDCard add_card = 14;
inline bool Request::has_add_card() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Request::set_has_add_card() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Request::clear_has_add_card() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Request::clear_add_card() {
  if (add_card_ != NULL) add_card_->::Czhtdev::IDCard::Clear();
  clear_has_add_card();
}
inline const ::Czhtdev::IDCard& Request::add_card() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.add_card)
  return add_card_ != NULL ? *add_card_
                         : *::Czhtdev::IDCard::internal_default_instance();
}
inline ::Czhtdev::IDCard* Request::mutable_add_card() {
  set_has_add_card();
  if (add_card_ == NULL) {
    add_card_ = new ::Czhtdev::IDCard;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.add_card)
  return add_card_;
}
inline ::Czhtdev::IDCard* Request::release_add_card() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.add_card)
  clear_has_add_card();
  ::Czhtdev::IDCard* temp = add_card_;
  add_card_ = NULL;
  return temp;
}
inline void Request::set_allocated_add_card(::Czhtdev::IDCard* add_card) {
  delete add_card_;
  add_card_ = add_card;
  if (add_card) {
    set_has_add_card();
  } else {
    clear_has_add_card();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.add_card)
}

// optional .Czhtdev.IDCard detele_card = 15;
inline bool Request::has_detele_card() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Request::set_has_detele_card() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Request::clear_has_detele_card() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Request::clear_detele_card() {
  if (detele_card_ != NULL) detele_card_->::Czhtdev::IDCard::Clear();
  clear_has_detele_card();
}
inline const ::Czhtdev::IDCard& Request::detele_card() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.detele_card)
  return detele_card_ != NULL ? *detele_card_
                         : *::Czhtdev::IDCard::internal_default_instance();
}
inline ::Czhtdev::IDCard* Request::mutable_detele_card() {
  set_has_detele_card();
  if (detele_card_ == NULL) {
    detele_card_ = new ::Czhtdev::IDCard;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.detele_card)
  return detele_card_;
}
inline ::Czhtdev::IDCard* Request::release_detele_card() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.detele_card)
  clear_has_detele_card();
  ::Czhtdev::IDCard* temp = detele_card_;
  detele_card_ = NULL;
  return temp;
}
inline void Request::set_allocated_detele_card(::Czhtdev::IDCard* detele_card) {
  delete detele_card_;
  detele_card_ = detele_card;
  if (detele_card) {
    set_has_detele_card();
  } else {
    clear_has_detele_card();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.detele_card)
}

// optional .Czhtdev.IPTable add_ip = 16;
inline bool Request::has_add_ip() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Request::set_has_add_ip() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Request::clear_has_add_ip() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Request::clear_add_ip() {
  if (add_ip_ != NULL) add_ip_->::Czhtdev::IPTable::Clear();
  clear_has_add_ip();
}
inline const ::Czhtdev::IPTable& Request::add_ip() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.add_ip)
  return add_ip_ != NULL ? *add_ip_
                         : *::Czhtdev::IPTable::internal_default_instance();
}
inline ::Czhtdev::IPTable* Request::mutable_add_ip() {
  set_has_add_ip();
  if (add_ip_ == NULL) {
    add_ip_ = new ::Czhtdev::IPTable;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.add_ip)
  return add_ip_;
}
inline ::Czhtdev::IPTable* Request::release_add_ip() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.add_ip)
  clear_has_add_ip();
  ::Czhtdev::IPTable* temp = add_ip_;
  add_ip_ = NULL;
  return temp;
}
inline void Request::set_allocated_add_ip(::Czhtdev::IPTable* add_ip) {
  delete add_ip_;
  add_ip_ = add_ip;
  if (add_ip) {
    set_has_add_ip();
  } else {
    clear_has_add_ip();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.add_ip)
}

// optional .Czhtdev.IP detele_ip = 17;
inline bool Request::has_detele_ip() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Request::set_has_detele_ip() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Request::clear_has_detele_ip() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Request::clear_detele_ip() {
  if (detele_ip_ != NULL) detele_ip_->::Czhtdev::IP::Clear();
  clear_has_detele_ip();
}
inline const ::Czhtdev::IP& Request::detele_ip() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Request.detele_ip)
  return detele_ip_ != NULL ? *detele_ip_
                         : *::Czhtdev::IP::internal_default_instance();
}
inline ::Czhtdev::IP* Request::mutable_detele_ip() {
  set_has_detele_ip();
  if (detele_ip_ == NULL) {
    detele_ip_ = new ::Czhtdev::IP;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Request.detele_ip)
  return detele_ip_;
}
inline ::Czhtdev::IP* Request::release_detele_ip() {
  // @@protoc_insertion_point(field_release:Czhtdev.Request.detele_ip)
  clear_has_detele_ip();
  ::Czhtdev::IP* temp = detele_ip_;
  detele_ip_ = NULL;
  return temp;
}
inline void Request::set_allocated_detele_ip(::Czhtdev::IP* detele_ip) {
  delete detele_ip_;
  detele_ip_ = detele_ip;
  if (detele_ip) {
    set_has_detele_ip();
  } else {
    clear_has_detele_ip();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Request.detele_ip)
}

inline const Request* Request::internal_default_instance() {
  return &Request_default_instance_.get();
}
// -------------------------------------------------------------------

// Response

// required bool result = 1;
inline bool Response::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool Response::result() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.result)
  return result_;
}
inline void Response::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Response.result)
}

// optional .Czhtdev.ErrorType error_code = 2;
inline bool Response::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::Czhtdev::ErrorType Response::error_code() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.error_code)
  return static_cast< ::Czhtdev::ErrorType >(error_code_);
}
inline void Response::set_error_code(::Czhtdev::ErrorType value) {
  assert(::Czhtdev::ErrorType_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Response.error_code)
}

// optional string error_description = 3;
inline bool Response::has_error_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_error_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_error_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_error_description() {
  error_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_description();
}
inline const ::std::string& Response::error_description() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.error_description)
  return error_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_error_description(const ::std::string& value) {
  set_has_error_description();
  error_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Czhtdev.Response.error_description)
}
inline void Response::set_error_description(const char* value) {
  set_has_error_description();
  error_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Czhtdev.Response.error_description)
}
inline void Response::set_error_description(const char* value, size_t size) {
  set_has_error_description();
  error_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Czhtdev.Response.error_description)
}
inline ::std::string* Response::mutable_error_description() {
  set_has_error_description();
  // @@protoc_insertion_point(field_mutable:Czhtdev.Response.error_description)
  return error_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_error_description() {
  // @@protoc_insertion_point(field_release:Czhtdev.Response.error_description)
  clear_has_error_description();
  return error_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_error_description(::std::string* error_description) {
  if (error_description != NULL) {
    set_has_error_description();
  } else {
    clear_has_error_description();
  }
  error_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_description);
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Response.error_description)
}

// optional .Czhtdev.User user = 5;
inline bool Response::has_user() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_user() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_user() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_user() {
  if (user_ != NULL) user_->::Czhtdev::User::Clear();
  clear_has_user();
}
inline const ::Czhtdev::User& Response::user() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.user)
  return user_ != NULL ? *user_
                         : *::Czhtdev::User::internal_default_instance();
}
inline ::Czhtdev::User* Response::mutable_user() {
  set_has_user();
  if (user_ == NULL) {
    user_ = new ::Czhtdev::User;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Response.user)
  return user_;
}
inline ::Czhtdev::User* Response::release_user() {
  // @@protoc_insertion_point(field_release:Czhtdev.Response.user)
  clear_has_user();
  ::Czhtdev::User* temp = user_;
  user_ = NULL;
  return temp;
}
inline void Response::set_allocated_user(::Czhtdev::User* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Response.user)
}

// repeated .Czhtdev.UserList user_list = 6;
inline int Response::user_list_size() const {
  return user_list_.size();
}
inline void Response::clear_user_list() {
  user_list_.Clear();
}
inline const ::Czhtdev::UserList& Response::user_list(int index) const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.user_list)
  return user_list_.Get(index);
}
inline ::Czhtdev::UserList* Response::mutable_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:Czhtdev.Response.user_list)
  return user_list_.Mutable(index);
}
inline ::Czhtdev::UserList* Response::add_user_list() {
  // @@protoc_insertion_point(field_add:Czhtdev.Response.user_list)
  return user_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Czhtdev::UserList >*
Response::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:Czhtdev.Response.user_list)
  return &user_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Czhtdev::UserList >&
Response::user_list() const {
  // @@protoc_insertion_point(field_list:Czhtdev.Response.user_list)
  return user_list_;
}

// optional .Czhtdev.PassageRecord passge_record = 7;
inline bool Response::has_passge_record() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Response::set_has_passge_record() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Response::clear_has_passge_record() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Response::clear_passge_record() {
  if (passge_record_ != NULL) passge_record_->::Czhtdev::PassageRecord::Clear();
  clear_has_passge_record();
}
inline const ::Czhtdev::PassageRecord& Response::passge_record() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.passge_record)
  return passge_record_ != NULL ? *passge_record_
                         : *::Czhtdev::PassageRecord::internal_default_instance();
}
inline ::Czhtdev::PassageRecord* Response::mutable_passge_record() {
  set_has_passge_record();
  if (passge_record_ == NULL) {
    passge_record_ = new ::Czhtdev::PassageRecord;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Response.passge_record)
  return passge_record_;
}
inline ::Czhtdev::PassageRecord* Response::release_passge_record() {
  // @@protoc_insertion_point(field_release:Czhtdev.Response.passge_record)
  clear_has_passge_record();
  ::Czhtdev::PassageRecord* temp = passge_record_;
  passge_record_ = NULL;
  return temp;
}
inline void Response::set_allocated_passge_record(::Czhtdev::PassageRecord* passge_record) {
  delete passge_record_;
  passge_record_ = passge_record;
  if (passge_record) {
    set_has_passge_record();
  } else {
    clear_has_passge_record();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Response.passge_record)
}

// repeated .Czhtdev.PassageRecordList passge_record_list = 8;
inline int Response::passge_record_list_size() const {
  return passge_record_list_.size();
}
inline void Response::clear_passge_record_list() {
  passge_record_list_.Clear();
}
inline const ::Czhtdev::PassageRecordList& Response::passge_record_list(int index) const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.passge_record_list)
  return passge_record_list_.Get(index);
}
inline ::Czhtdev::PassageRecordList* Response::mutable_passge_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:Czhtdev.Response.passge_record_list)
  return passge_record_list_.Mutable(index);
}
inline ::Czhtdev::PassageRecordList* Response::add_passge_record_list() {
  // @@protoc_insertion_point(field_add:Czhtdev.Response.passge_record_list)
  return passge_record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Czhtdev::PassageRecordList >*
Response::mutable_passge_record_list() {
  // @@protoc_insertion_point(field_mutable_list:Czhtdev.Response.passge_record_list)
  return &passge_record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Czhtdev::PassageRecordList >&
Response::passge_record_list() const {
  // @@protoc_insertion_point(field_list:Czhtdev.Response.passge_record_list)
  return passge_record_list_;
}

// optional .Czhtdev.PassageRecord passge_synchronous = 9;
inline bool Response::has_passge_synchronous() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Response::set_has_passge_synchronous() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Response::clear_has_passge_synchronous() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Response::clear_passge_synchronous() {
  if (passge_synchronous_ != NULL) passge_synchronous_->::Czhtdev::PassageRecord::Clear();
  clear_has_passge_synchronous();
}
inline const ::Czhtdev::PassageRecord& Response::passge_synchronous() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.passge_synchronous)
  return passge_synchronous_ != NULL ? *passge_synchronous_
                         : *::Czhtdev::PassageRecord::internal_default_instance();
}
inline ::Czhtdev::PassageRecord* Response::mutable_passge_synchronous() {
  set_has_passge_synchronous();
  if (passge_synchronous_ == NULL) {
    passge_synchronous_ = new ::Czhtdev::PassageRecord;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Response.passge_synchronous)
  return passge_synchronous_;
}
inline ::Czhtdev::PassageRecord* Response::release_passge_synchronous() {
  // @@protoc_insertion_point(field_release:Czhtdev.Response.passge_synchronous)
  clear_has_passge_synchronous();
  ::Czhtdev::PassageRecord* temp = passge_synchronous_;
  passge_synchronous_ = NULL;
  return temp;
}
inline void Response::set_allocated_passge_synchronous(::Czhtdev::PassageRecord* passge_synchronous) {
  delete passge_synchronous_;
  passge_synchronous_ = passge_synchronous;
  if (passge_synchronous) {
    set_has_passge_synchronous();
  } else {
    clear_has_passge_synchronous();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Response.passge_synchronous)
}

// optional .Czhtdev.DevConfig cfg = 10;
inline bool Response::has_cfg() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Response::set_has_cfg() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Response::clear_has_cfg() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Response::clear_cfg() {
  if (cfg_ != NULL) cfg_->::Czhtdev::DevConfig::Clear();
  clear_has_cfg();
}
inline const ::Czhtdev::DevConfig& Response::cfg() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.cfg)
  return cfg_ != NULL ? *cfg_
                         : *::Czhtdev::DevConfig::internal_default_instance();
}
inline ::Czhtdev::DevConfig* Response::mutable_cfg() {
  set_has_cfg();
  if (cfg_ == NULL) {
    cfg_ = new ::Czhtdev::DevConfig;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Response.cfg)
  return cfg_;
}
inline ::Czhtdev::DevConfig* Response::release_cfg() {
  // @@protoc_insertion_point(field_release:Czhtdev.Response.cfg)
  clear_has_cfg();
  ::Czhtdev::DevConfig* temp = cfg_;
  cfg_ = NULL;
  return temp;
}
inline void Response::set_allocated_cfg(::Czhtdev::DevConfig* cfg) {
  delete cfg_;
  cfg_ = cfg;
  if (cfg) {
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Response.cfg)
}

// optional .Czhtdev.DeviceInfo devinfo = 11;
inline bool Response::has_devinfo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Response::set_has_devinfo() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Response::clear_has_devinfo() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Response::clear_devinfo() {
  if (devinfo_ != NULL) devinfo_->::Czhtdev::DeviceInfo::Clear();
  clear_has_devinfo();
}
inline const ::Czhtdev::DeviceInfo& Response::devinfo() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.devinfo)
  return devinfo_ != NULL ? *devinfo_
                         : *::Czhtdev::DeviceInfo::internal_default_instance();
}
inline ::Czhtdev::DeviceInfo* Response::mutable_devinfo() {
  set_has_devinfo();
  if (devinfo_ == NULL) {
    devinfo_ = new ::Czhtdev::DeviceInfo;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Response.devinfo)
  return devinfo_;
}
inline ::Czhtdev::DeviceInfo* Response::release_devinfo() {
  // @@protoc_insertion_point(field_release:Czhtdev.Response.devinfo)
  clear_has_devinfo();
  ::Czhtdev::DeviceInfo* temp = devinfo_;
  devinfo_ = NULL;
  return temp;
}
inline void Response::set_allocated_devinfo(::Czhtdev::DeviceInfo* devinfo) {
  delete devinfo_;
  devinfo_ = devinfo;
  if (devinfo) {
    set_has_devinfo();
  } else {
    clear_has_devinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Response.devinfo)
}

// repeated .Czhtdev.IDCard card_list = 13;
inline int Response::card_list_size() const {
  return card_list_.size();
}
inline void Response::clear_card_list() {
  card_list_.Clear();
}
inline const ::Czhtdev::IDCard& Response::card_list(int index) const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.card_list)
  return card_list_.Get(index);
}
inline ::Czhtdev::IDCard* Response::mutable_card_list(int index) {
  // @@protoc_insertion_point(field_mutable:Czhtdev.Response.card_list)
  return card_list_.Mutable(index);
}
inline ::Czhtdev::IDCard* Response::add_card_list() {
  // @@protoc_insertion_point(field_add:Czhtdev.Response.card_list)
  return card_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Czhtdev::IDCard >*
Response::mutable_card_list() {
  // @@protoc_insertion_point(field_mutable_list:Czhtdev.Response.card_list)
  return &card_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Czhtdev::IDCard >&
Response::card_list() const {
  // @@protoc_insertion_point(field_list:Czhtdev.Response.card_list)
  return card_list_;
}

// repeated .Czhtdev.IPTable ip_list = 14;
inline int Response::ip_list_size() const {
  return ip_list_.size();
}
inline void Response::clear_ip_list() {
  ip_list_.Clear();
}
inline const ::Czhtdev::IPTable& Response::ip_list(int index) const {
  // @@protoc_insertion_point(field_get:Czhtdev.Response.ip_list)
  return ip_list_.Get(index);
}
inline ::Czhtdev::IPTable* Response::mutable_ip_list(int index) {
  // @@protoc_insertion_point(field_mutable:Czhtdev.Response.ip_list)
  return ip_list_.Mutable(index);
}
inline ::Czhtdev::IPTable* Response::add_ip_list() {
  // @@protoc_insertion_point(field_add:Czhtdev.Response.ip_list)
  return ip_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Czhtdev::IPTable >*
Response::mutable_ip_list() {
  // @@protoc_insertion_point(field_mutable_list:Czhtdev.Response.ip_list)
  return &ip_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Czhtdev::IPTable >&
Response::ip_list() const {
  // @@protoc_insertion_point(field_list:Czhtdev.Response.ip_list)
  return ip_list_;
}

inline const Response* Response::internal_default_instance() {
  return &Response_default_instance_.get();
}
// -------------------------------------------------------------------

// Message

// required .Czhtdev.MessageType type = 1;
inline bool Message::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Czhtdev::MessageType Message::type() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Message.type)
  return static_cast< ::Czhtdev::MessageType >(type_);
}
inline void Message::set_type(::Czhtdev::MessageType value) {
  assert(::Czhtdev::MessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Czhtdev.Message.type)
}

// optional .Czhtdev.Request request = 2;
inline bool Message::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_request() {
  if (request_ != NULL) request_->::Czhtdev::Request::Clear();
  clear_has_request();
}
inline const ::Czhtdev::Request& Message::request() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Message.request)
  return request_ != NULL ? *request_
                         : *::Czhtdev::Request::internal_default_instance();
}
inline ::Czhtdev::Request* Message::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::Czhtdev::Request;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Message.request)
  return request_;
}
inline ::Czhtdev::Request* Message::release_request() {
  // @@protoc_insertion_point(field_release:Czhtdev.Message.request)
  clear_has_request();
  ::Czhtdev::Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void Message::set_allocated_request(::Czhtdev::Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Message.request)
}

// optional .Czhtdev.Response response = 3;
inline bool Message::has_response() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_response() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_response() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_response() {
  if (response_ != NULL) response_->::Czhtdev::Response::Clear();
  clear_has_response();
}
inline const ::Czhtdev::Response& Message::response() const {
  // @@protoc_insertion_point(field_get:Czhtdev.Message.response)
  return response_ != NULL ? *response_
                         : *::Czhtdev::Response::internal_default_instance();
}
inline ::Czhtdev::Response* Message::mutable_response() {
  set_has_response();
  if (response_ == NULL) {
    response_ = new ::Czhtdev::Response;
  }
  // @@protoc_insertion_point(field_mutable:Czhtdev.Message.response)
  return response_;
}
inline ::Czhtdev::Response* Message::release_response() {
  // @@protoc_insertion_point(field_release:Czhtdev.Message.response)
  clear_has_response();
  ::Czhtdev::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Message::set_allocated_response(::Czhtdev::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:Czhtdev.Message.response)
}

inline const Message* Message::internal_default_instance() {
  return &Message_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Czhtdev

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Czhtdev::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Czhtdev::MessageType>() {
  return ::Czhtdev::MessageType_descriptor();
}
template <> struct is_proto_enum< ::Czhtdev::ErrorType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Czhtdev::ErrorType>() {
  return ::Czhtdev::ErrorType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_czhtdev_2eproto__INCLUDED
